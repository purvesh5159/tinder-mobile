{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PersonCard = function PersonCard(_ref) {\n  var _person$first_name, _person$last_name;\n  var person = _ref.person;\n  if (!person) return null;\n  var name = person.name || person.full_name || ((_person$first_name = person.first_name) != null ? _person$first_name : '') + \" \" + ((_person$last_name = person.last_name) != null ? _person$last_name : '');\n  var age = person.age || (person.dob ? new Date().getFullYear() - new Date(person.dob).getFullYear() : '');\n  var location = person.location || person.city || person.address || '';\n  var photo = person.photo_url || person.image || person.avatar || person.profile_pic;\n  return _jsxs(View, {\n    style: styles.card,\n    children: [photo ? _jsx(Image, {\n      source: {\n        uri: photo\n      },\n      style: styles.image\n    }) : _jsx(View, {\n      style: [styles.image, styles.noPhoto],\n      children: _jsx(Text, {\n        children: \"No photo\"\n      })\n    }), _jsxs(Text, {\n      style: styles.name,\n      children: [name, age ? \", \" + age : '']\n    }), _jsx(Text, {\n      style: styles.location,\n      children: location\n    })]\n  });\n};\nexport default PersonCard;\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 12,\n    alignItems: 'center'\n  },\n  image: {\n    width: 280,\n    height: 350,\n    borderRadius: 12,\n    marginBottom: 10\n  },\n  noPhoto: {\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  name: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  location: {\n    fontSize: 16,\n    color: '#666'\n  }\n});","map":{"version":3,"names":["React","View","Text","Image","StyleSheet","jsx","_jsx","jsxs","_jsxs","PersonCard","_ref","_person$first_name","_person$last_name","person","name","full_name","first_name","last_name","age","dob","Date","getFullYear","location","city","address","photo","photo_url","image","avatar","profile_pic","style","styles","card","children","source","uri","noPhoto","create","backgroundColor","borderRadius","padding","alignItems","width","height","marginBottom","justifyContent","fontSize","fontWeight","color"],"sources":["D:/xamp/htdocs/tinder-mobile/src/components/molecules/PersonCard.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Image, StyleSheet } from 'react-native';\n\nconst PersonCard = ({ person }) => {\n  if (!person) return null;\n\n  // Handle different API field names\n  const name = person.name || person.full_name || `${person.first_name ?? ''} ${person.last_name ?? ''}`;\n  const age = person.age || (person.dob ? new Date().getFullYear() - new Date(person.dob).getFullYear() : '');\n  const location = person.location || person.city || person.address || '';\n  const photo = person.photo_url || person.image || person.avatar || person.profile_pic;\n\n  return (\n    <View style={styles.card}>\n      {photo ? (\n        <Image source={{ uri: photo }} style={styles.image} />\n      ) : (\n        <View style={[styles.image, styles.noPhoto]}>\n          <Text>No photo</Text>\n        </View>\n      )}\n      <Text style={styles.name}>{name}{age ? `, ${age}` : ''}</Text>\n      <Text style={styles.location}>{location}</Text>\n    </View>\n  );\n};\n\nexport default PersonCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 12,\n    alignItems: 'center',\n  },\n  image: {\n    width: 280,\n    height: 350,\n    borderRadius: 12,\n    marginBottom: 10,\n  },\n  noPhoto: {\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  name: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  location: {\n    fontSize: 16,\n    color: '#666',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAmB;EAAA,IAAAC,kBAAA,EAAAC,iBAAA;EAAA,IAAbC,MAAM,GAAAH,IAAA,CAANG,MAAM;EAC1B,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAGxB,IAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI,IAAID,MAAM,CAACE,SAAS,MAAAJ,kBAAA,GAAOE,MAAM,CAACG,UAAU,YAAAL,kBAAA,GAAI,EAAE,YAAAC,iBAAA,GAAIC,MAAM,CAACI,SAAS,YAAAL,iBAAA,GAAI,EAAE,CAAE;EACtG,IAAMM,GAAG,GAAGL,MAAM,CAACK,GAAG,KAAKL,MAAM,CAACM,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,IAAID,IAAI,CAACP,MAAM,CAACM,GAAG,CAAC,CAACE,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC;EAC3G,IAAMC,QAAQ,GAAGT,MAAM,CAACS,QAAQ,IAAIT,MAAM,CAACU,IAAI,IAAIV,MAAM,CAACW,OAAO,IAAI,EAAE;EACvE,IAAMC,KAAK,GAAGZ,MAAM,CAACa,SAAS,IAAIb,MAAM,CAACc,KAAK,IAAId,MAAM,CAACe,MAAM,IAAIf,MAAM,CAACgB,WAAW;EAErF,OACErB,KAAA,CAACP,IAAI;IAAC6B,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GACtBR,KAAK,GACJnB,IAAA,CAACH,KAAK;MAAC+B,MAAM,EAAE;QAAEC,GAAG,EAAEV;MAAM,CAAE;MAACK,KAAK,EAAEC,MAAM,CAACJ;IAAM,CAAE,CAAC,GAEtDrB,IAAA,CAACL,IAAI;MAAC6B,KAAK,EAAE,CAACC,MAAM,CAACJ,KAAK,EAAEI,MAAM,CAACK,OAAO,CAAE;MAAAH,QAAA,EAC1C3B,IAAA,CAACJ,IAAI;QAAA+B,QAAA,EAAC;MAAQ,CAAM;IAAC,CACjB,CACP,EACDzB,KAAA,CAACN,IAAI;MAAC4B,KAAK,EAAEC,MAAM,CAACjB,IAAK;MAAAmB,QAAA,GAAEnB,IAAI,EAAEI,GAAG,UAAQA,GAAG,GAAK,EAAE;IAAA,CAAO,CAAC,EAC9DZ,IAAA,CAACJ,IAAI;MAAC4B,KAAK,EAAEC,MAAM,CAACT,QAAS;MAAAW,QAAA,EAAEX;IAAQ,CAAO,CAAC;EAAA,CAC3C,CAAC;AAEX,CAAC;AAED,eAAeb,UAAU;AAEzB,IAAMsB,MAAM,GAAG3B,UAAU,CAACiC,MAAM,CAAC;EAC/BL,IAAI,EAAE;IACJM,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDd,KAAK,EAAE;IACLe,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXJ,YAAY,EAAE,EAAE;IAChBK,YAAY,EAAE;EAChB,CAAC;EACDR,OAAO,EAAE;IACPE,eAAe,EAAE,MAAM;IACvBO,cAAc,EAAE,QAAQ;IACxBJ,UAAU,EAAE;EACd,CAAC;EACD3B,IAAI,EAAE;IACJgC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBH,YAAY,EAAE;EAChB,CAAC;EACDtB,QAAQ,EAAE;IACRwB,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE;EACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}