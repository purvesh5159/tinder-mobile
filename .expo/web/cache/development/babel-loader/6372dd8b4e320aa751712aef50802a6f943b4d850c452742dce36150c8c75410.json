{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React, { Component } from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport styles from \"./styles\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  height = _Dimensions$get.height,\n  width = _Dimensions$get.width;\nvar LABEL_TYPES = {\n  NONE: 'none',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\nvar SWIPE_MULTIPLY_FACTOR = 7;\nvar calculateCardIndexes = function calculateCardIndexes(firstCardIndex, cards) {\n  firstCardIndex = firstCardIndex || 0;\n  var previousCardIndex = firstCardIndex === 0 ? cards.length - 1 : firstCardIndex - 1;\n  var secondCardIndex = firstCardIndex === cards.length - 1 ? 0 : firstCardIndex + 1;\n  return {\n    firstCardIndex: firstCardIndex,\n    secondCardIndex: secondCardIndex,\n    previousCardIndex: previousCardIndex\n  };\n};\nvar rebuildStackAnimatedValues = function rebuildStackAnimatedValues(props) {\n  var stackPositionsAndScales = {};\n  var stackSize = props.stackSize,\n    stackSeparation = props.stackSeparation,\n    stackScale = props.stackScale;\n  for (var position = 0; position < stackSize; position++) {\n    stackPositionsAndScales[\"stackPosition\" + position] = new Animated.Value(stackSeparation * position);\n    stackPositionsAndScales[\"stackScale\" + position] = new Animated.Value((100 - stackScale * position) * 0.01);\n  }\n  return stackPositionsAndScales;\n};\nvar Swiper = function (_Component) {\n  function Swiper(_props) {\n    var _this;\n    _classCallCheck(this, Swiper);\n    _this = _callSuper(this, Swiper, [_props]);\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      var _this2 = _this,\n        props = _this2.props,\n        state = _this2.state;\n      var propsChanged = !isEqual(props.cards, nextProps.cards) || props.cardIndex !== nextProps.cardIndex;\n      var stateChanged = nextState.firstCardIndex !== state.firstCardIndex || nextState.secondCardIndex !== state.secondCardIndex || nextState.previousCardIndex !== state.previousCardIndex || nextState.labelType !== state.labelType || nextState.swipedAllCards !== state.swipedAllCards;\n      return propsChanged || stateChanged;\n    };\n    _this.componentWillUnmountAfterInteractions = function () {\n      var _this$dimensionsChang;\n      _this.state.pan.x.removeAllListeners();\n      _this.state.pan.y.removeAllListeners();\n      (_this$dimensionsChang = _this.dimensionsChangeSubscription) == null ? void 0 : _this$dimensionsChang.remove();\n    };\n    _this.componentWillUnmount = function () {\n      _this._mounted = false;\n      InteractionManager.runAfterInteractions(_this.componentWillUnmountAfterInteractions.bind(_this));\n    };\n    _this.getCardStyle = function () {\n      var _Dimensions$get2 = Dimensions.get('window'),\n        height = _Dimensions$get2.height,\n        width = _Dimensions$get2.width;\n      var _this$props = _this.props,\n        cardVerticalMargin = _this$props.cardVerticalMargin,\n        cardHorizontalMargin = _this$props.cardHorizontalMargin,\n        marginTop = _this$props.marginTop,\n        marginBottom = _this$props.marginBottom;\n      var cardWidth = width - cardHorizontalMargin * 2;\n      var cardHeight = height - cardVerticalMargin * 2 - marginTop - marginBottom;\n      return {\n        top: cardVerticalMargin,\n        left: cardHorizontalMargin,\n        width: cardWidth,\n        height: cardHeight\n      };\n    };\n    _this.initializeCardStyle = function () {\n      _this.dimensionsChangeSubscription = Dimensions.addEventListener('change', _this.onDimensionsChange);\n    };\n    _this.initializePanResponder = function () {\n      _this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(event, gestureState) {\n          return false;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          var isVerticalSwipe = Math.sqrt(Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2));\n          if (!_this.props.verticalSwipe && isVerticalSwipe) {\n            return false;\n          }\n          return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10;\n        },\n        onPanResponderGrant: _this.onPanResponderGrant,\n        onPanResponderMove: _this.onPanResponderMove,\n        onPanResponderRelease: _this.onPanResponderRelease,\n        onPanResponderTerminate: _this.onPanResponderRelease\n      });\n    };\n    _this.createAnimatedEvent = function () {\n      var _this$props2 = _this.props,\n        horizontalSwipe = _this$props2.horizontalSwipe,\n        verticalSwipe = _this$props2.verticalSwipe;\n      var _this$state$pan = _this.state.pan,\n        x = _this$state$pan.x,\n        y = _this$state$pan.y;\n      var dx = horizontalSwipe ? x : new Animated.Value(0);\n      var dy = verticalSwipe ? y : new Animated.Value(0);\n      return {\n        dx: dx,\n        dy: dy\n      };\n    };\n    _this.onDimensionsChange = function () {\n      _this.forceUpdate();\n    };\n    _this.onPanResponderMove = function (event, gestureState) {\n      _this.props.onSwiping(_this._animatedValueX, _this._animatedValueY);\n      var _this$props3 = _this.props,\n        overlayOpacityHorizontalThreshold = _this$props3.overlayOpacityHorizontalThreshold,\n        overlayOpacityVerticalThreshold = _this$props3.overlayOpacityVerticalThreshold;\n      if (!overlayOpacityHorizontalThreshold) {\n        overlayOpacityHorizontalThreshold = _this.props.horizontalThreshold;\n      }\n      if (!overlayOpacityVerticalThreshold) {\n        overlayOpacityVerticalThreshold = _this.props.verticalThreshold;\n      }\n      var isSwipingLeft, isSwipingRight, isSwipingTop, isSwipingBottom;\n      if (Math.abs(_this._animatedValueX) > Math.abs(_this._animatedValueY) && Math.abs(_this._animatedValueX) > overlayOpacityHorizontalThreshold) {\n        if (_this._animatedValueX > 0) isSwipingRight = true;else isSwipingLeft = true;\n      } else if (Math.abs(_this._animatedValueY) > Math.abs(_this._animatedValueX) && Math.abs(_this._animatedValueY) > overlayOpacityVerticalThreshold) {\n        if (_this._animatedValueY > 0) isSwipingBottom = true;else isSwipingTop = true;\n      }\n      if (isSwipingRight) {\n        _this.setState({\n          labelType: LABEL_TYPES.RIGHT\n        });\n      } else if (isSwipingLeft) {\n        _this.setState({\n          labelType: LABEL_TYPES.LEFT\n        });\n      } else if (isSwipingTop) {\n        _this.setState({\n          labelType: LABEL_TYPES.TOP\n        });\n      } else if (isSwipingBottom) {\n        _this.setState({\n          labelType: LABEL_TYPES.BOTTOM\n        });\n      } else {\n        _this.setState({\n          labelType: LABEL_TYPES.NONE\n        });\n      }\n      var onTapCardDeadZone = _this.props.onTapCardDeadZone;\n      if (_this._animatedValueX < -onTapCardDeadZone || _this._animatedValueX > onTapCardDeadZone || _this._animatedValueY < -onTapCardDeadZone || _this._animatedValueY > onTapCardDeadZone) {\n        _this.setState({\n          slideGesture: true\n        });\n      }\n      return Animated.event([null, _this.createAnimatedEvent()], {\n        useNativeDriver: false\n      })(event, gestureState);\n    };\n    _this.onPanResponderGrant = function (event, gestureState) {\n      _this.props.dragStart && _this.props.dragStart();\n      if (!_this.state.panResponderLocked) {\n        _this.state.pan.setOffset({\n          x: 0,\n          y: 0\n        });\n      }\n      _this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n    };\n    _this.validPanResponderRelease = function () {\n      var _this$props4 = _this.props,\n        disableBottomSwipe = _this$props4.disableBottomSwipe,\n        disableLeftSwipe = _this$props4.disableLeftSwipe,\n        disableRightSwipe = _this$props4.disableRightSwipe,\n        disableTopSwipe = _this$props4.disableTopSwipe;\n      var _this$getSwipeDirecti = _this.getSwipeDirection(_this._animatedValueX, _this._animatedValueY),\n        isSwipingLeft = _this$getSwipeDirecti.isSwipingLeft,\n        isSwipingRight = _this$getSwipeDirecti.isSwipingRight,\n        isSwipingTop = _this$getSwipeDirecti.isSwipingTop,\n        isSwipingBottom = _this$getSwipeDirecti.isSwipingBottom;\n      return isSwipingLeft && !disableLeftSwipe || isSwipingRight && !disableRightSwipe || isSwipingTop && !disableTopSwipe || isSwipingBottom && !disableBottomSwipe;\n    };\n    _this.onPanResponderRelease = function (e, gestureState) {\n      _this.props.dragEnd && _this.props.dragEnd();\n      if (_this.state.panResponderLocked) {\n        _this.state.pan.setValue({\n          x: 0,\n          y: 0\n        });\n        _this.state.pan.setOffset({\n          x: 0,\n          y: 0\n        });\n        return;\n      }\n      var _this$props5 = _this.props,\n        horizontalThreshold = _this$props5.horizontalThreshold,\n        verticalThreshold = _this$props5.verticalThreshold;\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var isSwiping = animatedValueX > horizontalThreshold || animatedValueY > verticalThreshold;\n      if (isSwiping && _this.validPanResponderRelease()) {\n        var onSwipeDirectionCallback = _this.getOnSwipeDirectionCallback(_this._animatedValueX, _this._animatedValueY);\n        _this.swipeCard(onSwipeDirectionCallback);\n      } else {\n        _this.resetTopCard();\n      }\n      if (!_this.state.slideGesture) {\n        _this.props.onTapCard(_this.state.firstCardIndex);\n      }\n      _this.setState({\n        labelType: LABEL_TYPES.NONE,\n        slideGesture: false\n      });\n    };\n    _this.getOnSwipeDirectionCallback = function (animatedValueX, animatedValueY) {\n      var _this$props6 = _this.props,\n        onSwipedLeft = _this$props6.onSwipedLeft,\n        onSwipedRight = _this$props6.onSwipedRight,\n        onSwipedTop = _this$props6.onSwipedTop,\n        onSwipedBottom = _this$props6.onSwipedBottom;\n      var _this$getSwipeDirecti2 = _this.getSwipeDirection(animatedValueX, animatedValueY),\n        isSwipingLeft = _this$getSwipeDirecti2.isSwipingLeft,\n        isSwipingRight = _this$getSwipeDirecti2.isSwipingRight,\n        isSwipingTop = _this$getSwipeDirecti2.isSwipingTop,\n        isSwipingBottom = _this$getSwipeDirecti2.isSwipingBottom;\n      if (isSwipingRight) {\n        return onSwipedRight;\n      }\n      if (isSwipingLeft) {\n        return onSwipedLeft;\n      }\n      if (isSwipingTop) {\n        return onSwipedTop;\n      }\n      if (isSwipingBottom) {\n        return onSwipedBottom;\n      }\n    };\n    _this.mustDecrementCardIndex = function (animatedValueX, animatedValueY) {\n      var _this$getSwipeDirecti3 = _this.getSwipeDirection(animatedValueX, animatedValueY),\n        isSwipingLeft = _this$getSwipeDirecti3.isSwipingLeft,\n        isSwipingRight = _this$getSwipeDirecti3.isSwipingRight,\n        isSwipingTop = _this$getSwipeDirecti3.isSwipingTop,\n        isSwipingBottom = _this$getSwipeDirecti3.isSwipingBottom;\n      return isSwipingLeft && _this.props.goBackToPreviousCardOnSwipeLeft || isSwipingRight && _this.props.goBackToPreviousCardOnSwipeRight || isSwipingTop && _this.props.goBackToPreviousCardOnSwipeTop || isSwipingBottom && _this.props.goBackToPreviousCardOnSwipeBottom;\n    };\n    _this.getSwipeDirection = function (animatedValueX, animatedValueY) {\n      var isSwipingLeft = animatedValueX < -_this.props.horizontalThreshold;\n      var isSwipingRight = animatedValueX > _this.props.horizontalThreshold;\n      var isSwipingTop = animatedValueY < -_this.props.verticalThreshold;\n      var isSwipingBottom = animatedValueY > _this.props.verticalThreshold;\n      return {\n        isSwipingLeft: isSwipingLeft,\n        isSwipingRight: isSwipingRight,\n        isSwipingTop: isSwipingTop,\n        isSwipingBottom: isSwipingBottom\n      };\n    };\n    _this.resetTopCard = function (cb) {\n      Animated.spring(_this.state.pan, {\n        toValue: 0,\n        friction: _this.props.topCardResetAnimationFriction,\n        tension: _this.props.topCardResetAnimationTension,\n        useNativeDriver: true\n      }).start(cb);\n      _this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      });\n      _this.props.onSwipedAborted();\n    };\n    _this.swipeBack = function (cb) {\n      var _this$state = _this.state,\n        swipeBackXYPositions = _this$state.swipeBackXYPositions,\n        isSwipingBack = _this$state.isSwipingBack;\n      var infinite = _this.props.infinite;\n      var canSwipeBack = !isSwipingBack && (swipeBackXYPositions.length > 0 || infinite);\n      if (!canSwipeBack) {\n        return;\n      }\n      _this.setState({\n        isSwipingBack: !isSwipingBack,\n        swipeBackXYPositions: swipeBackXYPositions\n      }, function () {\n        _this.animatePreviousCard(_this.calculateNextPreviousCardPosition(), cb);\n      });\n    };\n    _this.swipeLeft = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedLeft, -_this.props.horizontalThreshold, 0, mustDecrementCardIndex);\n    };\n    _this.swipeRight = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedRight, _this.props.horizontalThreshold, 0, mustDecrementCardIndex);\n    };\n    _this.swipeTop = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedTop, 0, -_this.props.verticalThreshold, mustDecrementCardIndex);\n    };\n    _this.swipeBottom = function () {\n      var mustDecrementCardIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      _this.swipeCard(_this.props.onSwipedBottom, 0, _this.props.verticalThreshold, mustDecrementCardIndex);\n    };\n    _this.swipeCard = function (onSwiped) {\n      var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this._animatedValueX;\n      var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this._animatedValueY;\n      var mustDecrementCardIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      _this.setState({\n        panResponderLocked: true\n      });\n      _this.animateStack();\n      Animated.timing(_this.state.pan, {\n        toValue: {\n          x: x * SWIPE_MULTIPLY_FACTOR,\n          y: y * SWIPE_MULTIPLY_FACTOR\n        },\n        duration: _this.props.swipeAnimationDuration,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setSwipeBackCardXY(x, y, function () {\n          mustDecrementCardIndex = mustDecrementCardIndex ? true : _this.mustDecrementCardIndex(_this._animatedValueX, _this._animatedValueY);\n          if (mustDecrementCardIndex) {\n            _this.decrementCardIndex(onSwiped);\n          } else {\n            _this.incrementCardIndex(onSwiped);\n          }\n        });\n      });\n    };\n    _this.setSwipeBackCardXY = function () {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -width;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n      _this.setState({\n        swipeBackXYPositions: [].concat(_toConsumableArray(_this.state.swipeBackXYPositions), [{\n          x: x,\n          y: y\n        }])\n      }, cb);\n    };\n    _this.animatePreviousCard = function (_ref, cb) {\n      var x = _ref.x,\n        y = _ref.y;\n      var _this$state2 = _this.state,\n        previousCardX = _this$state2.previousCardX,\n        previousCardY = _this$state2.previousCardY;\n      previousCardX.setValue(x * SWIPE_MULTIPLY_FACTOR);\n      previousCardY.setValue(y * SWIPE_MULTIPLY_FACTOR);\n      Animated.parallel([Animated.spring(_this.state.previousCardX, {\n        toValue: 0,\n        friction: _this.props.stackAnimationFriction,\n        tension: _this.props.stackAnimationTension,\n        useNativeDriver: true\n      }), Animated.spring(_this.state.previousCardY, {\n        toValue: 0,\n        friction: _this.props.stackAnimationFriction,\n        tension: _this.props.stackAnimationTension,\n        useNativeDriver: true\n      })]).start(function () {\n        _this.setState({\n          isSwipingBack: false\n        });\n        _this.decrementCardIndex(cb);\n      });\n    };\n    _this.animateStack = function () {\n      var _this$state3 = _this.state,\n        secondCardIndex = _this$state3.secondCardIndex,\n        swipedAllCards = _this$state3.swipedAllCards;\n      var _this$props7 = _this.props,\n        stackSize = _this$props7.stackSize,\n        infinite = _this$props7.infinite,\n        showSecondCard = _this$props7.showSecondCard,\n        cards = _this$props7.cards;\n      var index = secondCardIndex;\n      while (stackSize-- > 1 && showSecondCard && !swipedAllCards) {\n        if (_this.state[\"stackPosition\" + stackSize] && _this.state[\"stackScale\" + stackSize]) {\n          var newSeparation = _this.props.stackSeparation * (stackSize - 1);\n          var newScale = (100 - _this.props.stackScale * (stackSize - 1)) * 0.01;\n          Animated.parallel([Animated.spring(_this.state[\"stackPosition\" + stackSize], {\n            toValue: newSeparation,\n            friction: _this.props.stackAnimationFriction,\n            tension: _this.props.stackAnimationTension,\n            useNativeDriver: true\n          }), Animated.spring(_this.state[\"stackScale\" + stackSize], {\n            toValue: newScale,\n            friction: _this.props.stackAnimationFriction,\n            tension: _this.props.stackAnimationTension,\n            useNativeDriver: true\n          })]).start();\n        }\n        if (index === cards.length - 1) {\n          if (!infinite) break;\n          index = 0;\n        } else {\n          index++;\n        }\n      }\n    };\n    _this.incrementCardIndex = function (onSwiped) {\n      var firstCardIndex = _this.state.firstCardIndex;\n      var infinite = _this.props.infinite;\n      var newCardIndex = firstCardIndex + 1;\n      var swipedAllCards = false;\n      _this.onSwipedCallbacks(onSwiped);\n      var allSwipedCheck = function allSwipedCheck() {\n        return newCardIndex === _this.props.cards.length;\n      };\n      if (allSwipedCheck()) {\n        if (!infinite) {\n          _this.props.onSwipedAll();\n          if (allSwipedCheck()) {\n            swipedAllCards = true;\n          }\n        } else {\n          newCardIndex = 0;\n        }\n      }\n      _this.setCardIndex(newCardIndex, swipedAllCards);\n    };\n    _this.decrementCardIndex = function (cb) {\n      var firstCardIndex = _this.state.firstCardIndex;\n      var lastCardIndex = _this.props.cards.length - 1;\n      var previousCardIndex = firstCardIndex - 1;\n      var newCardIndex = firstCardIndex === 0 ? lastCardIndex : previousCardIndex;\n      _this.onSwipedCallbacks(cb);\n      _this.setCardIndex(newCardIndex, false);\n    };\n    _this.jumpToCardIndex = function (newCardIndex) {\n      if (_this.props.cards[newCardIndex]) {\n        _this.setCardIndex(newCardIndex, false);\n      }\n    };\n    _this.rebuildStackValues = function () {\n      var stackPositionsAndScales = {};\n      var _this$props8 = _this.props,\n        stackSize = _this$props8.stackSize,\n        stackSeparation = _this$props8.stackSeparation,\n        stackScale = _this$props8.stackScale;\n      for (var position = 0; position < stackSize; position++) {\n        stackPositionsAndScales[\"stackPosition\" + position] = new Animated.Value(stackSeparation * position);\n        stackPositionsAndScales[\"stackScale\" + position] = new Animated.Value((100 - stackScale * position) * 0.01);\n      }\n      return stackPositionsAndScales;\n    };\n    _this.onSwipedCallbacks = function (swipeDirectionCallback) {\n      var previousCardIndex = _this.state.firstCardIndex;\n      _this.props.onSwiped(previousCardIndex, _this.props.cards[previousCardIndex]);\n      _this.setState(_this.rebuildStackValues);\n      if (swipeDirectionCallback) {\n        swipeDirectionCallback(previousCardIndex, _this.props.cards[previousCardIndex]);\n      }\n    };\n    _this.setCardIndex = function (newCardIndex, swipedAllCards) {\n      if (_this._mounted) {\n        _this.setState(_objectSpread(_objectSpread({}, calculateCardIndexes(newCardIndex, _this.props.cards)), {}, {\n          swipedAllCards: swipedAllCards,\n          panResponderLocked: false\n        }), _this.resetPanAndScale);\n      }\n    };\n    _this.resetPanAndScale = function () {\n      var _this$props9 = _this.props,\n        previousCardDefaultPositionX = _this$props9.previousCardDefaultPositionX,\n        previousCardDefaultPositionY = _this$props9.previousCardDefaultPositionY;\n      _this.state.pan.setValue({\n        x: 0,\n        y: 0\n      });\n      _this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      });\n      _this._animatedValueX = 0;\n      _this._animatedValueY = 0;\n      _this.state.previousCardX.setValue(previousCardDefaultPositionX);\n      _this.state.previousCardY.setValue(previousCardDefaultPositionY);\n      _this.state.pan.x.addListener(function (value) {\n        return _this._animatedValueX = value.value;\n      });\n      _this.state.pan.y.addListener(function (value) {\n        return _this._animatedValueY = value.value;\n      });\n    };\n    _this.calculateNextPreviousCardPosition = function () {\n      var swipeBackXYPositions = _this.state.swipeBackXYPositions;\n      var _this$props0 = _this.props,\n        x = _this$props0.previousCardDefaultPositionX,\n        y = _this$props0.previousCardDefaultPositionY;\n      var swipeBackPosition = swipeBackXYPositions.splice(-1, 1);\n      if (swipeBackPosition[0]) {\n        x = swipeBackPosition[0].x;\n        y = swipeBackPosition[0].y;\n      }\n      return {\n        x: x,\n        y: y\n      };\n    };\n    _this.calculateOverlayLabelStyle = function () {\n      var dynamicStyle = _this.props.overlayLabels[_this.state.labelType].style;\n      var overlayLabelStyle = dynamicStyle ? dynamicStyle.label : {};\n      if (_this.state.labelType === LABEL_TYPES.NONE) {\n        overlayLabelStyle = styles.hideOverlayLabel;\n      }\n      return [_this.props.overlayLabelStyle, overlayLabelStyle];\n    };\n    _this.calculateOverlayLabelWrapperStyle = function () {\n      var dynamicStyle = _this.props.overlayLabels[_this.state.labelType].style;\n      var dynamicWrapperStyle = dynamicStyle ? dynamicStyle.wrapper : {};\n      var opacity = _this.props.animateOverlayLabelsOpacity ? _this.interpolateOverlayLabelsOpacity() : 1;\n      return [_this.props.overlayLabelWrapperStyle, dynamicWrapperStyle, {\n        opacity: opacity\n      }];\n    };\n    _this.calculateSwipableCardStyle = function () {\n      var opacity = _this.props.animateCardOpacity ? _this.interpolateCardOpacity() : 1;\n      var rotation = _this.interpolateRotation();\n      return [styles.card, _this.getCardStyle(), {\n        zIndex: 1,\n        opacity: opacity,\n        transform: [{\n          translateX: _this.state.pan.x\n        }, {\n          translateY: _this.state.pan.y\n        }, {\n          rotate: rotation\n        }]\n      }, _this.props.cardStyle];\n    };\n    _this.calculateStackCardZoomStyle = function (position) {\n      return [styles.card, _this.getCardStyle(), {\n        zIndex: position * -1,\n        transform: [{\n          scale: _this.state[\"stackScale\" + position]\n        }, {\n          translateY: _this.state[\"stackPosition\" + position]\n        }]\n      }, _this.props.cardStyle];\n    };\n    _this.calculateSwipeBackCardStyle = function () {\n      return [styles.card, _this.getCardStyle(), {\n        zIndex: 4,\n        transform: [{\n          translateX: _this.state.previousCardX\n        }, {\n          translateY: _this.state.previousCardY\n        }]\n      }, _this.props.cardStyle];\n    };\n    _this.interpolateCardOpacity = function () {\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var opacity;\n      if (animatedValueX > animatedValueY) {\n        opacity = _this.state.pan.x.interpolate({\n          inputRange: _this.props.inputCardOpacityRangeX,\n          outputRange: _this.props.outputCardOpacityRangeX\n        });\n      } else {\n        opacity = _this.state.pan.y.interpolate({\n          inputRange: _this.props.inputCardOpacityRangeY,\n          outputRange: _this.props.outputCardOpacityRangeY\n        });\n      }\n      return opacity;\n    };\n    _this.interpolateOverlayLabelsOpacity = function () {\n      var animatedValueX = Math.abs(_this._animatedValueX);\n      var animatedValueY = Math.abs(_this._animatedValueY);\n      var opacity;\n      if (animatedValueX > animatedValueY) {\n        opacity = _this.state.pan.x.interpolate({\n          inputRange: _this.props.inputOverlayLabelsOpacityRangeX,\n          outputRange: _this.props.outputOverlayLabelsOpacityRangeX\n        });\n      } else {\n        opacity = _this.state.pan.y.interpolate({\n          inputRange: _this.props.inputOverlayLabelsOpacityRangeY,\n          outputRange: _this.props.outputOverlayLabelsOpacityRangeY\n        });\n      }\n      return opacity;\n    };\n    _this.interpolateRotation = function () {\n      return _this.state.pan.x.interpolate({\n        inputRange: _this.props.inputRotationRange,\n        outputRange: _this.props.outputRotationRange\n      });\n    };\n    _this.render = function () {\n      var _this$props1 = _this.props,\n        pointerEvents = _this$props1.pointerEvents,\n        backgroundColor = _this$props1.backgroundColor,\n        marginTop = _this$props1.marginTop,\n        marginBottom = _this$props1.marginBottom,\n        containerStyle = _this$props1.containerStyle,\n        swipeBackCard = _this$props1.swipeBackCard,\n        testID = _this$props1.testID;\n      return _jsxs(View, {\n        pointerEvents: pointerEvents,\n        testID: testID,\n        style: [styles.container, {\n          backgroundColor: backgroundColor,\n          marginTop: marginTop,\n          marginBottom: marginBottom\n        }, containerStyle],\n        children: [_this.renderChildren(), swipeBackCard ? _this.renderSwipeBackCard() : null, _this.renderStack()]\n      });\n    };\n    _this.renderChildren = function () {\n      var _this$props10 = _this.props,\n        childrenOnTop = _this$props10.childrenOnTop,\n        children = _this$props10.children,\n        stackSize = _this$props10.stackSize,\n        showSecondCard = _this$props10.showSecondCard;\n      var zIndex = stackSize && showSecondCard ? stackSize * -1 : 1;\n      if (childrenOnTop) {\n        zIndex = 5;\n      }\n      return _jsx(View, {\n        pointerEvents: \"box-none\",\n        style: [styles.childrenViewStyle, {\n          zIndex: zIndex\n        }],\n        children: children\n      });\n    };\n    _this.getCardKey = function (cardContent, cardIndex) {\n      var keyExtractor = _this.props.keyExtractor;\n      if (keyExtractor) {\n        return keyExtractor(cardContent);\n      }\n      return cardIndex;\n    };\n    _this.pushCardToStack = function (renderedCards, index, position, key, firstCard) {\n      var cards = _this.props.cards;\n      var stackCardZoomStyle = _this.calculateStackCardZoomStyle(position);\n      var stackCard = _this.props.renderCard(cards[index], index);\n      var swipableCardStyle = _this.calculateSwipableCardStyle();\n      var renderOverlayLabel = _this.renderOverlayLabel();\n      renderedCards.push(_jsxs(Animated.View, _objectSpread(_objectSpread({\n        style: firstCard ? swipableCardStyle : stackCardZoomStyle\n      }, _this._panResponder.panHandlers), {}, {\n        children: [firstCard ? renderOverlayLabel : null, stackCard]\n      }), key));\n    };\n    _this.renderStack = function () {\n      var _this$state4 = _this.state,\n        firstCardIndex = _this$state4.firstCardIndex,\n        swipedAllCards = _this$state4.swipedAllCards;\n      var cards = _this.props.cards;\n      var renderedCards = [];\n      var _this$props11 = _this.props,\n        stackSize = _this$props11.stackSize,\n        infinite = _this$props11.infinite,\n        showSecondCard = _this$props11.showSecondCard;\n      var index = firstCardIndex;\n      var firstCard = true;\n      var cardPosition = 0;\n      while (stackSize-- > 0 && (firstCard || showSecondCard) && !swipedAllCards) {\n        var key = _this.getCardKey(cards[index], index);\n        _this.pushCardToStack(renderedCards, index, cardPosition, key, firstCard);\n        firstCard = false;\n        if (index === cards.length - 1) {\n          if (!infinite) break;\n          index = 0;\n        } else {\n          index++;\n        }\n        cardPosition++;\n      }\n      return renderedCards;\n    };\n    _this.renderSwipeBackCard = function () {\n      var previousCardIndex = _this.state.previousCardIndex;\n      var cards = _this.props.cards;\n      var previousCardStyle = _this.calculateSwipeBackCardStyle();\n      var previousCard = _this.props.renderCard(cards[previousCardIndex], previousCardIndex);\n      var key = _this.getCardKey(cards[previousCardIndex], previousCardIndex);\n      return _jsx(Animated.View, {\n        style: previousCardStyle,\n        children: previousCard\n      }, key);\n    };\n    _this.renderOverlayLabel = function () {\n      var _this$props12 = _this.props,\n        disableBottomSwipe = _this$props12.disableBottomSwipe,\n        disableLeftSwipe = _this$props12.disableLeftSwipe,\n        disableRightSwipe = _this$props12.disableRightSwipe,\n        disableTopSwipe = _this$props12.disableTopSwipe,\n        overlayLabels = _this$props12.overlayLabels;\n      var labelType = _this.state.labelType;\n      var labelTypeNone = labelType === LABEL_TYPES.NONE;\n      var directionSwipeLabelDisabled = labelType === LABEL_TYPES.BOTTOM && disableBottomSwipe || labelType === LABEL_TYPES.LEFT && disableLeftSwipe || labelType === LABEL_TYPES.RIGHT && disableRightSwipe || labelType === LABEL_TYPES.TOP && disableTopSwipe;\n      if (!overlayLabels || !overlayLabels[labelType] || labelTypeNone || directionSwipeLabelDisabled) {\n        return null;\n      }\n      return _jsxs(Animated.View, {\n        style: _this.calculateOverlayLabelWrapperStyle(),\n        children: [!overlayLabels[labelType].element && _jsx(Text, {\n          style: _this.calculateOverlayLabelStyle(),\n          children: overlayLabels[labelType].title\n        }), overlayLabels[labelType].element && overlayLabels[labelType].element]\n      });\n    };\n    _this.state = _objectSpread(_objectSpread({}, calculateCardIndexes(_props.cardIndex, _props.cards)), {}, {\n      pan: new Animated.ValueXY(),\n      previousCardX: new Animated.Value(_props.previousCardDefaultPositionX),\n      previousCardY: new Animated.Value(_props.previousCardDefaultPositionY),\n      swipedAllCards: false,\n      panResponderLocked: false,\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false,\n      swipeBackXYPositions: [],\n      isSwipingBack: false\n    }, rebuildStackAnimatedValues(_props));\n    _this._mounted = true;\n    _this._animatedValueX = 0;\n    _this._animatedValueY = 0;\n    _this.state.pan.x.addListener(function (value) {\n      return _this._animatedValueX = value.value;\n    });\n    _this.state.pan.y.addListener(function (value) {\n      return _this._animatedValueY = value.value;\n    });\n    _this.initializeCardStyle();\n    _this.initializePanResponder();\n    return _this;\n  }\n  _inherits(Swiper, _Component);\n  return _createClass(Swiper);\n}(Component);\nSwiper.propTypes = {\n  animateCardOpacity: PropTypes.bool,\n  animateOverlayLabelsOpacity: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  cardHorizontalMargin: PropTypes.number,\n  cardIndex: PropTypes.number,\n  cardStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  cardVerticalMargin: PropTypes.number,\n  cards: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  containerStyle: PropTypes.object,\n  children: PropTypes.any,\n  childrenOnTop: PropTypes.bool,\n  dragEnd: PropTypes.func,\n  dragStart: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  goBackToPreviousCardOnSwipeBottom: PropTypes.bool,\n  goBackToPreviousCardOnSwipeLeft: PropTypes.bool,\n  goBackToPreviousCardOnSwipeRight: PropTypes.bool,\n  goBackToPreviousCardOnSwipeTop: PropTypes.bool,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  infinite: PropTypes.bool,\n  inputCardOpacityRangeX: PropTypes.array,\n  inputCardOpacityRangeY: PropTypes.array,\n  inputOverlayLabelsOpacityRangeX: PropTypes.array,\n  inputOverlayLabelsOpacityRangeY: PropTypes.array,\n  inputCardOpacityRange: PropTypes.array,\n  inputRotationRange: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  marginBottom: PropTypes.number,\n  marginTop: PropTypes.number,\n  onSwiped: PropTypes.func,\n  onSwipedAborted: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onTapCard: PropTypes.func,\n  onTapCardDeadZone: PropTypes.number,\n  outputCardOpacityRangeX: PropTypes.array,\n  outputCardOpacityRangeY: PropTypes.array,\n  outputOverlayLabelsOpacityRangeX: PropTypes.array,\n  outputOverlayLabelsOpacityRangeY: PropTypes.array,\n  outputRotationRange: PropTypes.array,\n  outputCardOpacityRange: PropTypes.array,\n  overlayLabels: PropTypes.object,\n  overlayLabelStyle: PropTypes.object,\n  overlayLabelWrapperStyle: PropTypes.object,\n  overlayOpacityHorizontalThreshold: PropTypes.number,\n  overlayOpacityVerticalThreshold: PropTypes.number,\n  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),\n  previousCardDefaultPositionX: PropTypes.number,\n  previousCardDefaultPositionY: PropTypes.number,\n  renderCard: PropTypes.func.isRequired,\n  secondCardZoom: PropTypes.number,\n  showSecondCard: PropTypes.bool,\n  stackAnimationFriction: PropTypes.number,\n  stackAnimationTension: PropTypes.number,\n  stackScale: PropTypes.number,\n  stackSeparation: PropTypes.number,\n  stackSize: PropTypes.number,\n  swipeAnimationDuration: PropTypes.number,\n  swipeBackCard: PropTypes.bool,\n  testID: PropTypes.string,\n  topCardResetAnimationFriction: PropTypes.number,\n  topCardResetAnimationTension: PropTypes.number,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  zoomAnimationDuration: PropTypes.number,\n  zoomFriction: PropTypes.number\n};\nSwiper.defaultProps = {\n  animateCardOpacity: false,\n  animateOverlayLabelsOpacity: false,\n  backgroundColor: '#4FD0E9',\n  cardHorizontalMargin: 20,\n  cardIndex: 0,\n  cardStyle: {},\n  cardVerticalMargin: 60,\n  childrenOnTop: false,\n  containerStyle: {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 4,\n  goBackToPreviousCardOnSwipeBottom: false,\n  goBackToPreviousCardOnSwipeLeft: false,\n  goBackToPreviousCardOnSwipeRight: false,\n  goBackToPreviousCardOnSwipeTop: false,\n  infinite: false,\n  inputCardOpacityRangeX: [-width / 2, -width / 3, 0, width / 3, width / 2],\n  inputCardOpacityRangeY: [-height / 2, -height / 3, 0, height / 3, height / 2],\n  inputOverlayLabelsOpacityRangeX: [-width / 3, -width / 4, 0, width / 4, width / 3],\n  inputOverlayLabelsOpacityRangeY: [-height / 4, -height / 5, 0, height / 5, height / 4],\n  inputRotationRange: [-width / 2, 0, width / 2],\n  keyExtractor: null,\n  marginBottom: 0,\n  marginTop: 0,\n  onSwiped: function onSwiped(cardIndex) {},\n  onSwipedAborted: function onSwipedAborted() {},\n  onSwipedAll: function onSwipedAll() {},\n  onSwipedBottom: function onSwipedBottom(cardIndex) {},\n  onSwipedLeft: function onSwipedLeft(cardIndex) {},\n  onSwipedRight: function onSwipedRight(cardIndex) {},\n  onSwipedTop: function onSwipedTop(cardIndex) {},\n  onSwiping: function onSwiping() {},\n  onTapCard: function onTapCard(cardIndex) {},\n  onTapCardDeadZone: 5,\n  outputCardOpacityRangeX: [0.8, 1, 1, 1, 0.8],\n  outputCardOpacityRangeY: [0.8, 1, 1, 1, 0.8],\n  outputOverlayLabelsOpacityRangeX: [1, 0, 0, 0, 1],\n  outputOverlayLabelsOpacityRangeY: [1, 0, 0, 0, 1],\n  outputRotationRange: ['-10deg', '0deg', '10deg'],\n  overlayLabels: null,\n  overlayLabelStyle: {\n    fontSize: 45,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    padding: 10,\n    overflow: 'hidden'\n  },\n  overlayLabelWrapperStyle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 2,\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlayOpacityHorizontalThreshold: width / 4,\n  overlayOpacityVerticalThreshold: height / 5,\n  pointerEvents: 'auto',\n  previousCardDefaultPositionX: -width,\n  previousCardDefaultPositionY: -height,\n  secondCardZoom: 0.97,\n  showSecondCard: true,\n  stackAnimationFriction: 7,\n  stackAnimationTension: 40,\n  stackScale: 3,\n  stackSeparation: 10,\n  stackSize: 1,\n  swipeAnimationDuration: 350,\n  swipeBackCard: false,\n  topCardResetAnimationFriction: 7,\n  topCardResetAnimationTension: 40,\n  verticalSwipe: true,\n  verticalThreshold: height / 5,\n  zoomAnimationDuration: 100,\n  zoomFriction: 7\n};\nexport default Swiper;","map":{"version":3,"names":["React","Component","PanResponder","Text","View","Dimensions","Animated","InteractionManager","PropTypes","isEqual","styles","jsxs","_jsxs","jsx","_jsx","_Dimensions$get","get","height","width","LABEL_TYPES","NONE","LEFT","RIGHT","TOP","BOTTOM","SWIPE_MULTIPLY_FACTOR","calculateCardIndexes","firstCardIndex","cards","previousCardIndex","length","secondCardIndex","rebuildStackAnimatedValues","props","stackPositionsAndScales","stackSize","stackSeparation","stackScale","position","Value","Swiper","_Component","_this","_classCallCheck","_callSuper","shouldComponentUpdate","nextProps","nextState","_this2","state","propsChanged","cardIndex","stateChanged","labelType","swipedAllCards","componentWillUnmountAfterInteractions","_this$dimensionsChang","pan","x","removeAllListeners","y","dimensionsChangeSubscription","remove","componentWillUnmount","_mounted","runAfterInteractions","bind","getCardStyle","_Dimensions$get2","_this$props","cardVerticalMargin","cardHorizontalMargin","marginTop","marginBottom","cardWidth","cardHeight","top","left","initializeCardStyle","addEventListener","onDimensionsChange","initializePanResponder","_panResponder","create","onStartShouldSetPanResponder","event","gestureState","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","evt","isVerticalSwipe","Math","sqrt","pow","dx","dy","verticalSwipe","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","createAnimatedEvent","_this$props2","horizontalSwipe","_this$state$pan","forceUpdate","onSwiping","_animatedValueX","_animatedValueY","_this$props3","overlayOpacityHorizontalThreshold","overlayOpacityVerticalThreshold","horizontalThreshold","verticalThreshold","isSwipingLeft","isSwipingRight","isSwipingTop","isSwipingBottom","abs","setState","onTapCardDeadZone","slideGesture","useNativeDriver","dragStart","panResponderLocked","setOffset","setValue","validPanResponderRelease","_this$props4","disableBottomSwipe","disableLeftSwipe","disableRightSwipe","disableTopSwipe","_this$getSwipeDirecti","getSwipeDirection","e","dragEnd","_this$props5","animatedValueX","animatedValueY","isSwiping","onSwipeDirectionCallback","getOnSwipeDirectionCallback","swipeCard","resetTopCard","onTapCard","_this$props6","onSwipedLeft","onSwipedRight","onSwipedTop","onSwipedBottom","_this$getSwipeDirecti2","mustDecrementCardIndex","_this$getSwipeDirecti3","goBackToPreviousCardOnSwipeLeft","goBackToPreviousCardOnSwipeRight","goBackToPreviousCardOnSwipeTop","goBackToPreviousCardOnSwipeBottom","cb","spring","toValue","friction","topCardResetAnimationFriction","tension","topCardResetAnimationTension","start","onSwipedAborted","swipeBack","_this$state","swipeBackXYPositions","isSwipingBack","infinite","canSwipeBack","animatePreviousCard","calculateNextPreviousCardPosition","swipeLeft","arguments","undefined","swipeRight","swipeTop","swipeBottom","onSwiped","animateStack","timing","duration","swipeAnimationDuration","setSwipeBackCardXY","decrementCardIndex","incrementCardIndex","concat","_toConsumableArray","_ref","_this$state2","previousCardX","previousCardY","parallel","stackAnimationFriction","stackAnimationTension","_this$state3","_this$props7","showSecondCard","index","newSeparation","newScale","newCardIndex","onSwipedCallbacks","allSwipedCheck","onSwipedAll","setCardIndex","lastCardIndex","jumpToCardIndex","rebuildStackValues","_this$props8","swipeDirectionCallback","_objectSpread","resetPanAndScale","_this$props9","previousCardDefaultPositionX","previousCardDefaultPositionY","addListener","value","_this$props0","swipeBackPosition","splice","calculateOverlayLabelStyle","dynamicStyle","overlayLabels","style","overlayLabelStyle","label","hideOverlayLabel","calculateOverlayLabelWrapperStyle","dynamicWrapperStyle","wrapper","opacity","animateOverlayLabelsOpacity","interpolateOverlayLabelsOpacity","overlayLabelWrapperStyle","calculateSwipableCardStyle","animateCardOpacity","interpolateCardOpacity","rotation","interpolateRotation","card","zIndex","transform","translateX","translateY","rotate","cardStyle","calculateStackCardZoomStyle","scale","calculateSwipeBackCardStyle","interpolate","inputRange","inputCardOpacityRangeX","outputRange","outputCardOpacityRangeX","inputCardOpacityRangeY","outputCardOpacityRangeY","inputOverlayLabelsOpacityRangeX","outputOverlayLabelsOpacityRangeX","inputOverlayLabelsOpacityRangeY","outputOverlayLabelsOpacityRangeY","inputRotationRange","outputRotationRange","render","_this$props1","pointerEvents","backgroundColor","containerStyle","swipeBackCard","testID","container","children","renderChildren","renderSwipeBackCard","renderStack","_this$props10","childrenOnTop","childrenViewStyle","getCardKey","cardContent","keyExtractor","pushCardToStack","renderedCards","key","firstCard","stackCardZoomStyle","stackCard","renderCard","swipableCardStyle","renderOverlayLabel","push","panHandlers","_this$state4","_this$props11","cardPosition","previousCardStyle","previousCard","_this$props12","labelTypeNone","directionSwipeLabelDisabled","element","title","ValueXY","_inherits","_createClass","propTypes","bool","string","number","oneOfType","object","array","isRequired","any","func","inputCardOpacityRange","outputCardOpacityRange","oneOf","secondCardZoom","zoomAnimationDuration","zoomFriction","defaultProps","fontSize","fontWeight","borderRadius","padding","overflow","flex"],"sources":["D:/xamp/htdocs/tinder-mobile/node_modules/react-native-deck-swiper/Swiper.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { PanResponder, Text, View, Dimensions, Animated, InteractionManager } from 'react-native'\nimport PropTypes from 'prop-types'\nimport isEqual from 'lodash/isEqual'\n\nimport styles from './styles'\n\nconst { height, width } = Dimensions.get('window')\nconst LABEL_TYPES = {\n  NONE: 'none',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n}\nconst SWIPE_MULTIPLY_FACTOR = 7\n\nconst calculateCardIndexes = (firstCardIndex, cards) => {\n  firstCardIndex = firstCardIndex || 0\n  const previousCardIndex = firstCardIndex === 0 ? cards.length - 1 : firstCardIndex - 1\n  const secondCardIndex = firstCardIndex === cards.length - 1 ? 0 : firstCardIndex + 1\n  return { firstCardIndex, secondCardIndex, previousCardIndex }\n}\n\nconst rebuildStackAnimatedValues = (props) => {\n  const stackPositionsAndScales = {}\n  const { stackSize, stackSeparation, stackScale } = props\n\n  for (let position = 0; position < stackSize; position++) {\n    stackPositionsAndScales[`stackPosition${position}`] = new Animated.Value(stackSeparation * position)\n    stackPositionsAndScales[`stackScale${position}`] = new Animated.Value((100 - stackScale * position) * 0.01)\n  }\n\n  return stackPositionsAndScales\n}\n\nclass Swiper extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ...calculateCardIndexes(props.cardIndex, props.cards),\n      pan: new Animated.ValueXY(),\n\n      previousCardX: new Animated.Value(props.previousCardDefaultPositionX),\n      previousCardY: new Animated.Value(props.previousCardDefaultPositionY),\n      swipedAllCards: false,\n      panResponderLocked: false,\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false,\n      swipeBackXYPositions: [],\n      isSwipingBack: false,\n      ...rebuildStackAnimatedValues(props)\n    }\n\n    this._mounted = true\n    this._animatedValueX = 0\n    this._animatedValueY = 0\n\n    this.state.pan.x.addListener(value => (this._animatedValueX = value.value))\n    this.state.pan.y.addListener(value => (this._animatedValueY = value.value))\n\n    this.initializeCardStyle()\n    this.initializePanResponder()\n  }\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    const { props, state } = this\n    const propsChanged = (\n      !isEqual(props.cards, nextProps.cards) ||\n      props.cardIndex !== nextProps.cardIndex\n    )\n    const stateChanged = (\n      nextState.firstCardIndex !== state.firstCardIndex ||\n      nextState.secondCardIndex !== state.secondCardIndex ||\n      nextState.previousCardIndex !== state.previousCardIndex ||\n      nextState.labelType !== state.labelType ||\n      nextState.swipedAllCards !== state.swipedAllCards\n    )\n    return propsChanged || stateChanged\n  }\n\n  componentWillUnmountAfterInteractions = () => {\n    this.state.pan.x.removeAllListeners()\n    this.state.pan.y.removeAllListeners()\n    this.dimensionsChangeSubscription?.remove()\n  }\n\n  componentWillUnmount = () => {\n    this._mounted = false;\n    InteractionManager.runAfterInteractions(this.componentWillUnmountAfterInteractions.bind(this));\n  }\n\n  getCardStyle = () => {\n    const { height, width } = Dimensions.get('window')\n    const {\n      cardVerticalMargin,\n      cardHorizontalMargin,\n      marginTop,\n      marginBottom\n    } = this.props\n\n    const cardWidth = width - cardHorizontalMargin * 2\n    const cardHeight =\n      height - cardVerticalMargin * 2 - marginTop - marginBottom\n\n    return {\n      top: cardVerticalMargin,\n      left: cardHorizontalMargin,\n      width: cardWidth,\n      height: cardHeight\n    }\n  }\n\n  initializeCardStyle = () => {\n    // this.forceUpdate()\n    this.dimensionsChangeSubscription = Dimensions.addEventListener('change', this.onDimensionsChange)\n  }\n\n  initializePanResponder = () => {\n    this._panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (event, gestureState) => true,\n      onMoveShouldSetPanResponder: (event, gestureState) => false,\n\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n        const isVerticalSwipe = Math.sqrt(\n          Math.pow(gestureState.dx, 2) < Math.pow(gestureState.dy, 2)\n        )\n        if (!this.props.verticalSwipe && isVerticalSwipe) {\n          return false\n        }\n        return Math.sqrt(Math.pow(gestureState.dx, 2) + Math.pow(gestureState.dy, 2)) > 10\n      },\n      onPanResponderGrant: this.onPanResponderGrant,\n      onPanResponderMove: this.onPanResponderMove,\n      onPanResponderRelease: this.onPanResponderRelease,\n      onPanResponderTerminate: this.onPanResponderRelease\n    })\n  }\n\n  createAnimatedEvent = () => {\n    const { horizontalSwipe, verticalSwipe } = this.props\n    const { x, y } = this.state.pan\n    const dx = horizontalSwipe ? x : new Animated.Value(0)\n    const dy = verticalSwipe ? y : new Animated.Value(0)\n    return { dx, dy }\n  }\n\n  onDimensionsChange = () => {\n    this.forceUpdate()\n  }\n\n  onPanResponderMove = (event, gestureState) => {\n    this.props.onSwiping(this._animatedValueX, this._animatedValueY)\n\n    let { overlayOpacityHorizontalThreshold, overlayOpacityVerticalThreshold } = this.props\n    if (!overlayOpacityHorizontalThreshold) {\n      overlayOpacityHorizontalThreshold = this.props.horizontalThreshold\n    }\n    if (!overlayOpacityVerticalThreshold) {\n      overlayOpacityVerticalThreshold = this.props.verticalThreshold\n    }\n\n    let isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n\n    if (Math.abs(this._animatedValueX) > Math.abs(this._animatedValueY) && Math.abs(this._animatedValueX) > overlayOpacityHorizontalThreshold) {\n      if (this._animatedValueX > 0) isSwipingRight = true\n      else isSwipingLeft = true\n    } else if (Math.abs(this._animatedValueY) > Math.abs(this._animatedValueX) && Math.abs(this._animatedValueY) > overlayOpacityVerticalThreshold) {\n      if (this._animatedValueY > 0) isSwipingBottom = true\n      else isSwipingTop = true\n    }\n\n    if (isSwipingRight) {\n      this.setState({ labelType: LABEL_TYPES.RIGHT })\n    } else if (isSwipingLeft) {\n      this.setState({ labelType: LABEL_TYPES.LEFT })\n    } else if (isSwipingTop) {\n      this.setState({ labelType: LABEL_TYPES.TOP })\n    } else if (isSwipingBottom) {\n      this.setState({ labelType: LABEL_TYPES.BOTTOM })\n    } else {\n      this.setState({ labelType: LABEL_TYPES.NONE })\n    }\n\n    const { onTapCardDeadZone } = this.props\n    if (\n      this._animatedValueX < -onTapCardDeadZone ||\n      this._animatedValueX > onTapCardDeadZone ||\n      this._animatedValueY < -onTapCardDeadZone ||\n      this._animatedValueY > onTapCardDeadZone\n    ) {\n      this.setState({\n        slideGesture: true\n      })\n    }\n\n    return Animated.event([null, this.createAnimatedEvent()], { useNativeDriver: false })(\n      event,\n      gestureState\n    )\n  }\n\n  onPanResponderGrant = (event, gestureState) => {\n    this.props.dragStart && this.props.dragStart()\n    if (!this.state.panResponderLocked) {\n      this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      })\n    }\n\n    this.state.pan.setValue({\n      x: 0,\n      y: 0\n    })\n  }\n\n  validPanResponderRelease = () => {\n    const {\n      disableBottomSwipe,\n      disableLeftSwipe,\n      disableRightSwipe,\n      disableTopSwipe\n    } = this.props\n\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(this._animatedValueX, this._animatedValueY)\n\n    return (\n      (isSwipingLeft && !disableLeftSwipe) ||\n      (isSwipingRight && !disableRightSwipe) ||\n      (isSwipingTop && !disableTopSwipe) ||\n      (isSwipingBottom && !disableBottomSwipe)\n    )\n  }\n\n  onPanResponderRelease = (e, gestureState) => {\n    this.props.dragEnd && this.props.dragEnd()\n    if (this.state.panResponderLocked) {\n      this.state.pan.setValue({\n        x: 0,\n        y: 0\n      })\n      this.state.pan.setOffset({\n        x: 0,\n        y: 0\n      })\n\n      return\n    }\n\n    const { horizontalThreshold, verticalThreshold } = this.props\n\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n\n    const isSwiping =\n      animatedValueX > horizontalThreshold || animatedValueY > verticalThreshold\n\n    if (isSwiping && this.validPanResponderRelease()) {\n      const onSwipeDirectionCallback = this.getOnSwipeDirectionCallback(\n        this._animatedValueX,\n        this._animatedValueY\n      )\n\n      this.swipeCard(onSwipeDirectionCallback)\n    } else {\n      this.resetTopCard()\n    }\n\n    if (!this.state.slideGesture) {\n      this.props.onTapCard(this.state.firstCardIndex)\n    }\n\n    this.setState({\n      labelType: LABEL_TYPES.NONE,\n      slideGesture: false\n    })\n  }\n\n  getOnSwipeDirectionCallback = (animatedValueX, animatedValueY) => {\n    const {\n      onSwipedLeft,\n      onSwipedRight,\n      onSwipedTop,\n      onSwipedBottom\n    } = this.props\n\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(animatedValueX, animatedValueY)\n\n    if (isSwipingRight) {\n      return onSwipedRight\n    }\n\n    if (isSwipingLeft) {\n      return onSwipedLeft\n    }\n\n    if (isSwipingTop) {\n      return onSwipedTop\n    }\n\n    if (isSwipingBottom) {\n      return onSwipedBottom\n    }\n  }\n\n  mustDecrementCardIndex = (animatedValueX, animatedValueY) => {\n    const {\n      isSwipingLeft,\n      isSwipingRight,\n      isSwipingTop,\n      isSwipingBottom\n    } = this.getSwipeDirection(animatedValueX, animatedValueY)\n\n    return (\n      (isSwipingLeft && this.props.goBackToPreviousCardOnSwipeLeft) ||\n      (isSwipingRight && this.props.goBackToPreviousCardOnSwipeRight) ||\n      (isSwipingTop && this.props.goBackToPreviousCardOnSwipeTop) ||\n      (isSwipingBottom && this.props.goBackToPreviousCardOnSwipeBottom)\n    )\n  }\n\n  getSwipeDirection = (animatedValueX, animatedValueY) => {\n    const isSwipingLeft = animatedValueX < -this.props.horizontalThreshold\n    const isSwipingRight = animatedValueX > this.props.horizontalThreshold\n    const isSwipingTop = animatedValueY < -this.props.verticalThreshold\n    const isSwipingBottom = animatedValueY > this.props.verticalThreshold\n\n    return { isSwipingLeft, isSwipingRight, isSwipingTop, isSwipingBottom }\n  }\n\n  resetTopCard = cb => {\n    Animated.spring(this.state.pan, {\n      toValue: 0,\n      friction: this.props.topCardResetAnimationFriction,\n      tension: this.props.topCardResetAnimationTension,\n      useNativeDriver: true\n    }).start(cb)\n\n    this.state.pan.setOffset({\n      x: 0,\n      y: 0\n    })\n\n    this.props.onSwipedAborted()\n  }\n\n  swipeBack = cb => {\n    const { swipeBackXYPositions, isSwipingBack } = this.state\n    const { infinite } = this.props\n    const canSwipeBack = !isSwipingBack && (swipeBackXYPositions.length > 0 || infinite)\n    if (!canSwipeBack) {\n      return\n    }\n    this.setState({isSwipingBack: !isSwipingBack, swipeBackXYPositions}, () => {\n      this.animatePreviousCard(this.calculateNextPreviousCardPosition(), cb)\n    })\n  }\n\n  swipeLeft = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedLeft,\n      -this.props.horizontalThreshold,\n      0,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeRight = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedRight,\n      this.props.horizontalThreshold,\n      0,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeTop = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedTop,\n      0,\n      -this.props.verticalThreshold,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeBottom = (mustDecrementCardIndex = false) => {\n    this.swipeCard(\n      this.props.onSwipedBottom,\n      0,\n      this.props.verticalThreshold,\n      mustDecrementCardIndex\n    )\n  }\n\n  swipeCard = (\n    onSwiped,\n    x = this._animatedValueX,\n    y = this._animatedValueY,\n    mustDecrementCardIndex = false\n  ) => {\n    this.setState({ panResponderLocked: true })\n    this.animateStack()\n    Animated.timing(this.state.pan, {\n      toValue: {\n        x: x * SWIPE_MULTIPLY_FACTOR,\n        y: y * SWIPE_MULTIPLY_FACTOR\n      },\n      duration: this.props.swipeAnimationDuration,\n      useNativeDriver: true\n    }).start(() => {\n      this.setSwipeBackCardXY(x, y, () => {\n        mustDecrementCardIndex = mustDecrementCardIndex\n          ? true\n          : this.mustDecrementCardIndex(\n            this._animatedValueX,\n            this._animatedValueY\n          )\n\n        if (mustDecrementCardIndex) {\n          this.decrementCardIndex(onSwiped)\n        } else {\n          this.incrementCardIndex(onSwiped)\n        }\n      })\n    })\n  }\n\n  setSwipeBackCardXY = (x = -width, y = 0, cb) => {\n    this.setState({swipeBackXYPositions: [...this.state.swipeBackXYPositions, {x, y}]}, cb)\n  }\n\n  animatePreviousCard = ({x, y}, cb) => {\n    const { previousCardX, previousCardY } = this.state\n    previousCardX.setValue(x * SWIPE_MULTIPLY_FACTOR)\n    previousCardY.setValue(y * SWIPE_MULTIPLY_FACTOR)\n    Animated.parallel([\n      Animated.spring(this.state.previousCardX, {\n        toValue: 0,\n        friction: this.props.stackAnimationFriction,\n        tension: this.props.stackAnimationTension,\n        useNativeDriver: true\n      }),\n      Animated.spring(this.state.previousCardY, {\n        toValue: 0,\n        friction: this.props.stackAnimationFriction,\n        tension: this.props.stackAnimationTension,\n        useNativeDriver: true\n      })\n    ]).start(() => {\n      this.setState({isSwipingBack: false})\n      this.decrementCardIndex(cb)\n    })\n  }\n\n  animateStack = () => {\n    const { secondCardIndex, swipedAllCards } = this.state\n    let { stackSize, infinite, showSecondCard, cards } = this.props\n    let index = secondCardIndex\n\n    while (stackSize-- > 1 && showSecondCard && !swipedAllCards) {\n      if (this.state[`stackPosition${stackSize}`] && this.state[`stackScale${stackSize}`]) {\n        const newSeparation = this.props.stackSeparation * (stackSize - 1)\n        const newScale = (100 - this.props.stackScale * (stackSize - 1)) * 0.01\n        Animated.parallel([\n          Animated.spring(this.state[`stackPosition${stackSize}`], {\n            toValue: newSeparation,\n            friction: this.props.stackAnimationFriction,\n            tension: this.props.stackAnimationTension,\n            useNativeDriver: true\n          }),\n          Animated.spring(this.state[`stackScale${stackSize}`], {\n            toValue: newScale,\n            friction: this.props.stackAnimationFriction,\n            tension: this.props.stackAnimationTension,\n            useNativeDriver: true\n          })\n        ]).start()\n      }\n\n      if (index === cards.length - 1) {\n        if (!infinite) break\n        index = 0\n      } else {\n        index++\n      }\n    }\n  }\n\n  incrementCardIndex = onSwiped => {\n    const { firstCardIndex } = this.state\n    const { infinite } = this.props\n    let newCardIndex = firstCardIndex + 1\n    let swipedAllCards = false\n\n    this.onSwipedCallbacks(onSwiped)\n\n    const allSwipedCheck = () => newCardIndex === this.props.cards.length\n\n    if (allSwipedCheck()) {\n      if (!infinite) {\n        this.props.onSwipedAll()\n        // onSwipeAll may have added cards\n        if (allSwipedCheck()) {\n          swipedAllCards = true\n        }\n      } else {\n        newCardIndex = 0;\n      }\n    }\n\n    this.setCardIndex(newCardIndex, swipedAllCards)\n  }\n\n  decrementCardIndex = cb => {\n    const { firstCardIndex } = this.state\n    const lastCardIndex = this.props.cards.length - 1\n    const previousCardIndex = firstCardIndex - 1\n\n    const newCardIndex =\n      firstCardIndex === 0 ? lastCardIndex : previousCardIndex\n\n    this.onSwipedCallbacks(cb)\n    this.setCardIndex(newCardIndex, false)\n  }\n\n  jumpToCardIndex = newCardIndex => {\n    if (this.props.cards[newCardIndex]) {\n      this.setCardIndex(newCardIndex, false)\n    }\n  }\n  rebuildStackValues = () => {\n    const stackPositionsAndScales = {}\n    const { stackSize, stackSeparation, stackScale } = this.props\n    for (let position = 0; position < stackSize; position++) {\n      stackPositionsAndScales[`stackPosition${position}`] = new Animated.Value(stackSeparation * position)\n      stackPositionsAndScales[`stackScale${position}`] = new Animated.Value((100 - stackScale * position) * 0.01)\n    }\n    return stackPositionsAndScales\n  }\n\n  onSwipedCallbacks = (swipeDirectionCallback) => {\n    const previousCardIndex = this.state.firstCardIndex\n    this.props.onSwiped(previousCardIndex, this.props.cards[previousCardIndex])\n    this.setState(this.rebuildStackValues)\n    if (swipeDirectionCallback) {\n      swipeDirectionCallback(previousCardIndex, this.props.cards[previousCardIndex])\n    }\n  }\n\n  setCardIndex = (newCardIndex, swipedAllCards) => {\n    if (this._mounted) {\n      this.setState(\n        {\n          ...calculateCardIndexes(newCardIndex, this.props.cards),\n          swipedAllCards: swipedAllCards,\n          panResponderLocked: false\n        },\n        this.resetPanAndScale\n      )\n    }\n  }\n\n  resetPanAndScale = () => {\n    const {previousCardDefaultPositionX, previousCardDefaultPositionY} = this.props\n    this.state.pan.setValue({ x: 0, y: 0 })\n    this.state.pan.setOffset({ x: 0, y: 0})\n    this._animatedValueX = 0\n    this._animatedValueY = 0\n    this.state.previousCardX.setValue(previousCardDefaultPositionX)\n    this.state.previousCardY.setValue(previousCardDefaultPositionY)\n    this.state.pan.x.addListener(value => this._animatedValueX = value.value)\n    this.state.pan.y.addListener(value => this._animatedValueY = value.value)\n  }\n\n  calculateNextPreviousCardPosition = () => {\n    const { swipeBackXYPositions } = this.state\n    let { previousCardDefaultPositionX: x, previousCardDefaultPositionY: y } = this.props\n    const swipeBackPosition = swipeBackXYPositions.splice(-1, 1)\n    if (swipeBackPosition[0]) {\n      x = swipeBackPosition[0].x\n      y = swipeBackPosition[0].y\n    }\n    return { x, y }\n  }\n\n  calculateOverlayLabelStyle = () => {\n    const dynamicStyle = this.props.overlayLabels[this.state.labelType].style\n    let overlayLabelStyle = dynamicStyle ? dynamicStyle.label : {}\n\n    if (this.state.labelType === LABEL_TYPES.NONE) {\n      overlayLabelStyle = styles.hideOverlayLabel\n    }\n\n    return [this.props.overlayLabelStyle, overlayLabelStyle]\n  }\n\n  calculateOverlayLabelWrapperStyle = () => {\n    const dynamicStyle = this.props.overlayLabels[this.state.labelType].style\n    const dynamicWrapperStyle = dynamicStyle ? dynamicStyle.wrapper : {}\n\n    const opacity = this.props.animateOverlayLabelsOpacity\n      ? this.interpolateOverlayLabelsOpacity()\n      : 1\n    return [this.props.overlayLabelWrapperStyle, dynamicWrapperStyle, { opacity }]\n  }\n\n  calculateSwipableCardStyle = () => {\n    const opacity = this.props.animateCardOpacity\n      ? this.interpolateCardOpacity()\n      : 1\n    const rotation = this.interpolateRotation()\n\n    return [\n      styles.card,\n      this.getCardStyle(),\n      {\n        zIndex: 1,\n        opacity: opacity,\n        transform: [\n          { translateX: this.state.pan.x },\n          { translateY: this.state.pan.y },\n          { rotate: rotation }\n        ]\n      },\n      this.props.cardStyle\n    ]\n  }\n\n  calculateStackCardZoomStyle = (position) => [\n    styles.card,\n    this.getCardStyle(),\n    {\n      zIndex: position * -1,\n      transform: [{ scale: this.state[`stackScale${position}`] }, { translateY: this.state[`stackPosition${position}`] }]\n    },\n    this.props.cardStyle\n  ]\n\n  calculateSwipeBackCardStyle = () => [\n    styles.card,\n    this.getCardStyle(),\n    {\n      zIndex: 4,\n      transform: [\n        { translateX: this.state.previousCardX },\n        { translateY: this.state.previousCardY }\n      ]\n    },\n    this.props.cardStyle\n  ]\n\n  interpolateCardOpacity = () => {\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n    let opacity\n\n    if (animatedValueX > animatedValueY) {\n      opacity = this.state.pan.x.interpolate({\n        inputRange: this.props.inputCardOpacityRangeX,\n        outputRange: this.props.outputCardOpacityRangeX\n      })\n    } else {\n      opacity = this.state.pan.y.interpolate({\n        inputRange: this.props.inputCardOpacityRangeY,\n        outputRange: this.props.outputCardOpacityRangeY\n      })\n    }\n\n    return opacity\n  }\n\n  interpolateOverlayLabelsOpacity = () => {\n    const animatedValueX = Math.abs(this._animatedValueX)\n    const animatedValueY = Math.abs(this._animatedValueY)\n    let opacity\n\n    if (animatedValueX > animatedValueY) {\n      opacity = this.state.pan.x.interpolate({\n        inputRange: this.props.inputOverlayLabelsOpacityRangeX,\n        outputRange: this.props.outputOverlayLabelsOpacityRangeX\n      })\n    } else {\n      opacity = this.state.pan.y.interpolate({\n        inputRange: this.props.inputOverlayLabelsOpacityRangeY,\n        outputRange: this.props.outputOverlayLabelsOpacityRangeY\n      })\n    }\n\n    return opacity\n  }\n\n  interpolateRotation = () =>\n    this.state.pan.x.interpolate({\n      inputRange: this.props.inputRotationRange,\n      outputRange: this.props.outputRotationRange\n    })\n\n  render = () => {\n    const { pointerEvents, backgroundColor, marginTop, marginBottom, containerStyle, swipeBackCard, testID } = this.props\n    return (\n      <View\n        pointerEvents={pointerEvents}\n        testID={testID}\n        style={[\n          styles.container,\n          {\n            backgroundColor: backgroundColor,\n            marginTop: marginTop,\n            marginBottom: marginBottom\n          },\n          containerStyle\n        ]}\n      >\n        {this.renderChildren()}\n        {swipeBackCard ? this.renderSwipeBackCard() : null}\n        {this.renderStack()}\n      </View>\n    )\n  }\n\n  renderChildren = () => {\n    const { childrenOnTop, children, stackSize, showSecondCard } = this.props\n\n    let zIndex = (stackSize && showSecondCard)\n      ? stackSize * -1\n      : 1\n\n    if (childrenOnTop) {\n      zIndex = 5\n    }\n\n    return (\n      <View pointerEvents='box-none' style={[styles.childrenViewStyle, { zIndex: zIndex }]}>\n        {children}\n      </View>\n    )\n  }\n\n  getCardKey = (cardContent, cardIndex) => {\n    const { keyExtractor } = this.props\n\n    if (keyExtractor) {\n      return keyExtractor(cardContent)\n    }\n\n    return cardIndex\n  }\n\n  pushCardToStack = (renderedCards, index, position, key, firstCard) => {\n    const { cards } = this.props\n    const stackCardZoomStyle = this.calculateStackCardZoomStyle(position)\n    const stackCard = this.props.renderCard(cards[index], index)\n    const swipableCardStyle = this.calculateSwipableCardStyle()\n    const renderOverlayLabel = this.renderOverlayLabel()\n    renderedCards.push(\n      <Animated.View\n        key={key}\n        style={firstCard ? swipableCardStyle : stackCardZoomStyle}\n        {...this._panResponder.panHandlers}\n      >\n        {firstCard ? renderOverlayLabel : null}\n        {stackCard}\n      </Animated.View>\n    )\n  }\n\n  renderStack = () => {\n    const { firstCardIndex, swipedAllCards } = this.state\n    const { cards } = this.props\n    const renderedCards = []\n    let { stackSize, infinite, showSecondCard } = this.props\n    let index = firstCardIndex\n    let firstCard = true\n    let cardPosition = 0\n\n    while (stackSize-- > 0 && (firstCard || showSecondCard) && !swipedAllCards) {\n      const key = this.getCardKey(cards[index], index)\n      this.pushCardToStack(renderedCards, index, cardPosition, key, firstCard)\n\n      firstCard = false\n\n      if (index === cards.length - 1) {\n        if (!infinite) break\n        index = 0\n      } else {\n        index++\n      }\n      cardPosition++\n    }\n    return renderedCards\n  }\n\n  renderSwipeBackCard = () => {\n    const { previousCardIndex } = this.state\n    const { cards } = this.props\n    const previousCardStyle = this.calculateSwipeBackCardStyle()\n    const previousCard = this.props.renderCard(cards[previousCardIndex], previousCardIndex)\n    const key = this.getCardKey(cards[previousCardIndex], previousCardIndex)\n\n    return (\n      <Animated.View key={key} style={previousCardStyle}>\n        {previousCard}\n      </Animated.View>\n    )\n  }\n\n  renderOverlayLabel = () => {\n    const {\n      disableBottomSwipe,\n      disableLeftSwipe,\n      disableRightSwipe,\n      disableTopSwipe,\n      overlayLabels\n    } = this.props\n\n    const { labelType } = this.state\n\n    const labelTypeNone = labelType === LABEL_TYPES.NONE\n    const directionSwipeLabelDisabled =\n      (labelType === LABEL_TYPES.BOTTOM && disableBottomSwipe) ||\n      (labelType === LABEL_TYPES.LEFT && disableLeftSwipe) ||\n      (labelType === LABEL_TYPES.RIGHT && disableRightSwipe) ||\n      (labelType === LABEL_TYPES.TOP && disableTopSwipe)\n\n    if (\n      !overlayLabels ||\n      !overlayLabels[labelType] ||\n      labelTypeNone ||\n      directionSwipeLabelDisabled\n    ) {\n      return null\n    }\n\n    return (\n      <Animated.View style={this.calculateOverlayLabelWrapperStyle()}>\n        {!overlayLabels[labelType].element &&\n          <Text style={this.calculateOverlayLabelStyle()}>\n            {overlayLabels[labelType].title}\n          </Text>\n        }\n\n        {overlayLabels[labelType].element &&\n          overlayLabels[labelType].element\n        }\n      </Animated.View>\n    )\n  }\n}\n\nSwiper.propTypes = {\n  animateCardOpacity: PropTypes.bool,\n  animateOverlayLabelsOpacity: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  cardHorizontalMargin: PropTypes.number,\n  cardIndex: PropTypes.number,\n  cardStyle: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  cardVerticalMargin: PropTypes.number,\n  cards: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  containerStyle: PropTypes.object,\n  children: PropTypes.any,\n  childrenOnTop: PropTypes.bool,\n  dragEnd: PropTypes.func,\n  dragStart: PropTypes.func,\n  disableBottomSwipe: PropTypes.bool,\n  disableLeftSwipe: PropTypes.bool,\n  disableRightSwipe: PropTypes.bool,\n  disableTopSwipe: PropTypes.bool,\n  goBackToPreviousCardOnSwipeBottom: PropTypes.bool,\n  goBackToPreviousCardOnSwipeLeft: PropTypes.bool,\n  goBackToPreviousCardOnSwipeRight: PropTypes.bool,\n  goBackToPreviousCardOnSwipeTop: PropTypes.bool,\n  horizontalSwipe: PropTypes.bool,\n  horizontalThreshold: PropTypes.number,\n  infinite: PropTypes.bool,\n  inputCardOpacityRangeX: PropTypes.array,\n  inputCardOpacityRangeY: PropTypes.array,\n  inputOverlayLabelsOpacityRangeX: PropTypes.array,\n  inputOverlayLabelsOpacityRangeY: PropTypes.array,\n  inputCardOpacityRange: PropTypes.array,\n  inputRotationRange: PropTypes.array,\n  keyExtractor: PropTypes.func,\n  marginBottom: PropTypes.number,\n  marginTop: PropTypes.number,\n  onSwiped: PropTypes.func,\n  onSwipedAborted: PropTypes.func,\n  onSwipedAll: PropTypes.func,\n  onSwipedBottom: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedTop: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onTapCard: PropTypes.func,\n  onTapCardDeadZone: PropTypes.number,\n  outputCardOpacityRangeX: PropTypes.array,\n  outputCardOpacityRangeY: PropTypes.array,\n  outputOverlayLabelsOpacityRangeX: PropTypes.array,\n  outputOverlayLabelsOpacityRangeY: PropTypes.array,\n  outputRotationRange: PropTypes.array,\n  outputCardOpacityRange: PropTypes.array,\n  overlayLabels: PropTypes.object,\n  overlayLabelStyle: PropTypes.object,\n  overlayLabelWrapperStyle: PropTypes.object,\n  overlayOpacityHorizontalThreshold: PropTypes.number,\n  overlayOpacityVerticalThreshold: PropTypes.number,\n  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),\n  previousCardDefaultPositionX: PropTypes.number,\n  previousCardDefaultPositionY: PropTypes.number,\n  renderCard: PropTypes.func.isRequired,\n  secondCardZoom: PropTypes.number,\n  showSecondCard: PropTypes.bool,\n  stackAnimationFriction: PropTypes.number,\n  stackAnimationTension: PropTypes.number,\n  stackScale: PropTypes.number,\n  stackSeparation: PropTypes.number,\n  stackSize: PropTypes.number,\n  swipeAnimationDuration: PropTypes.number,\n  swipeBackCard: PropTypes.bool,\n  testID: PropTypes.string,\n  topCardResetAnimationFriction: PropTypes.number,\n  topCardResetAnimationTension: PropTypes.number,\n  verticalSwipe: PropTypes.bool,\n  verticalThreshold: PropTypes.number,\n  zoomAnimationDuration: PropTypes.number,\n  zoomFriction: PropTypes.number\n}\n\nSwiper.defaultProps = {\n  animateCardOpacity: false,\n  animateOverlayLabelsOpacity: false,\n  backgroundColor: '#4FD0E9',\n  cardHorizontalMargin: 20,\n  cardIndex: 0,\n  cardStyle: {},\n  cardVerticalMargin: 60,\n  childrenOnTop: false,\n  containerStyle: {},\n  disableBottomSwipe: false,\n  disableLeftSwipe: false,\n  disableRightSwipe: false,\n  disableTopSwipe: false,\n  horizontalSwipe: true,\n  horizontalThreshold: width / 4,\n  goBackToPreviousCardOnSwipeBottom: false,\n  goBackToPreviousCardOnSwipeLeft: false,\n  goBackToPreviousCardOnSwipeRight: false,\n  goBackToPreviousCardOnSwipeTop: false,\n  infinite: false,\n  inputCardOpacityRangeX: [-width / 2, -width / 3, 0, width / 3, width / 2],\n  inputCardOpacityRangeY: [-height / 2, -height / 3, 0, height / 3, height / 2],\n  inputOverlayLabelsOpacityRangeX: [\n    -width / 3,\n    -width / 4,\n    0,\n    width / 4,\n    width / 3\n  ],\n  inputOverlayLabelsOpacityRangeY: [\n    -height / 4,\n    -height / 5,\n    0,\n    height / 5,\n    height / 4\n  ],\n  inputRotationRange: [-width / 2, 0, width / 2],\n  keyExtractor: null,\n  marginBottom: 0,\n  marginTop: 0,\n  onSwiped: cardIndex => { },\n  onSwipedAborted: () => { },\n  onSwipedAll: () => { },\n  onSwipedBottom: cardIndex => { },\n  onSwipedLeft: cardIndex => { },\n  onSwipedRight: cardIndex => { },\n  onSwipedTop: cardIndex => { },\n  onSwiping: () => { },\n  onTapCard: (cardIndex) => { },\n  onTapCardDeadZone: 5,\n  outputCardOpacityRangeX: [0.8, 1, 1, 1, 0.8],\n  outputCardOpacityRangeY: [0.8, 1, 1, 1, 0.8],\n  outputOverlayLabelsOpacityRangeX: [1, 0, 0, 0, 1],\n  outputOverlayLabelsOpacityRangeY: [1, 0, 0, 0, 1],\n  outputRotationRange: ['-10deg', '0deg', '10deg'],\n  overlayLabels: null,\n  overlayLabelStyle: {\n    fontSize: 45,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    padding: 10,\n    overflow: 'hidden'\n  },\n  overlayLabelWrapperStyle: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    zIndex: 2,\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  overlayOpacityHorizontalThreshold: width / 4,\n  overlayOpacityVerticalThreshold: height / 5,\n  pointerEvents: 'auto',\n  previousCardDefaultPositionX: -width,\n  previousCardDefaultPositionY: -height,\n  secondCardZoom: 0.97,\n  showSecondCard: true,\n  stackAnimationFriction: 7,\n  stackAnimationTension: 40,\n  stackScale: 3,\n  stackSeparation: 10,\n  stackSize: 1,\n  swipeAnimationDuration: 350,\n  swipeBackCard: false,\n  topCardResetAnimationFriction: 7,\n  topCardResetAnimationTension: 40,\n  verticalSwipe: true,\n  verticalThreshold: height / 5,\n  zoomAnimationDuration: 100,\n  zoomFriction: 7\n}\n\nexport default Swiper\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}