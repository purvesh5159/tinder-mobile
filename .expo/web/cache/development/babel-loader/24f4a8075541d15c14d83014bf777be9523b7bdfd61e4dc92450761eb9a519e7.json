{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Swiper from 'react-native-deck-swiper';\nimport PersonCard from \"../molecules/PersonCard\";\nimport { usePeople } from \"../../hooks/usePeople\";\nimport { likePerson, dislikePerson } from \"../../hooks/useSwipe\";\nimport { useRecoilValue } from 'recoil';\nimport { currentUserIdAtom } from \"../../atoms/userAtom\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SwipeDeck = forwardRef(function (props, ref) {\n  var userId = useRecoilValue(currentUserIdAtom);\n  var swiperRef = useRef(null);\n  var _usePeople = usePeople({\n      per_page: 30\n    }),\n    data = _usePeople.data,\n    isLoading = _usePeople.isLoading;\n  if (isLoading) return _jsx(ActivityIndicator, {\n    style: {\n      marginTop: 40\n    }\n  });\n  var people = data && data.data ? data.data : [];\n  var handleSwipe = function () {\n    var _ref = _asyncToGenerator(function* (idx, type) {\n      var target = people[idx];\n      if (!target) return;\n      try {\n        if (type === 'right') yield likePerson({\n          user_id: userId,\n          target_id: target.id\n        });else yield dislikePerson({\n          user_id: userId,\n          target_id: target.id\n        });\n      } catch (e) {\n        console.warn('Swipe API error', e.message);\n      }\n    });\n    return function handleSwipe(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useImperativeHandle(ref, function () {\n    return {\n      swipeLeft: function swipeLeft() {\n        var _swiperRef$current;\n        return (_swiperRef$current = swiperRef.current) == null ? void 0 : _swiperRef$current.swipeLeft();\n      },\n      swipeRight: function swipeRight() {\n        var _swiperRef$current2;\n        return (_swiperRef$current2 = swiperRef.current) == null ? void 0 : _swiperRef$current2.swipeRight();\n      },\n      jumpToCardIndex: function jumpToCardIndex(i) {\n        var _swiperRef$current3;\n        return (_swiperRef$current3 = swiperRef.current) == null ? void 0 : _swiperRef$current3.jumpToCardIndex(i);\n      }\n    };\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Swiper, {\n      ref: swiperRef,\n      cards: people,\n      cardIndex: 0,\n      renderCard: function renderCard(card) {\n        return _jsx(PersonCard, {\n          person: card\n        });\n      },\n      stackSize: 3,\n      verticalSwipe: false,\n      onSwipedLeft: function onSwipedLeft(i) {\n        return handleSwipe(i, 'left');\n      },\n      onSwipedRight: function onSwipedRight(i) {\n        return handleSwipe(i, 'right');\n      },\n      containerStyle: styles.swiper,\n      cardStyle: {\n        alignItems: 'center'\n      },\n      overlayLabels: {\n        left: {\n          title: 'NOPE',\n          style: {\n            label: {\n              backgroundColor: 'red',\n              color: 'white',\n              fontSize: 24\n            }\n          }\n        },\n        right: {\n          title: 'LIKE',\n          style: {\n            label: {\n              backgroundColor: 'green',\n              color: 'white',\n              fontSize: 24\n            }\n          }\n        }\n      },\n      animateCardOpacity: true\n    })\n  });\n});\nexport default SwipeDeck;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  swiper: {\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","forwardRef","useRef","useImperativeHandle","View","ActivityIndicator","StyleSheet","Swiper","PersonCard","usePeople","likePerson","dislikePerson","useRecoilValue","currentUserIdAtom","jsx","_jsx","SwipeDeck","props","ref","userId","swiperRef","_usePeople","per_page","data","isLoading","style","marginTop","people","handleSwipe","_ref","_asyncToGenerator","idx","type","target","user_id","target_id","id","e","console","warn","message","_x","_x2","apply","arguments","swipeLeft","_swiperRef$current","current","swipeRight","_swiperRef$current2","jumpToCardIndex","i","_swiperRef$current3","styles","container","children","cards","cardIndex","renderCard","card","person","stackSize","verticalSwipe","onSwipedLeft","onSwipedRight","containerStyle","swiper","cardStyle","alignItems","overlayLabels","left","title","label","backgroundColor","color","fontSize","right","animateCardOpacity","create","flex","justifyContent","width"],"sources":["D:/xamp/htdocs/tinder-mobile/src/components/organisms/SwipeDeck.js"],"sourcesContent":["import React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { View, ActivityIndicator, StyleSheet } from 'react-native';\nimport Swiper from 'react-native-deck-swiper';\nimport PersonCard from '../molecules/PersonCard';\nimport { usePeople } from '../../hooks/usePeople';\nimport { likePerson, dislikePerson } from '../../hooks/useSwipe';\nimport { useRecoilValue } from 'recoil';\nimport { currentUserIdAtom } from '../../atoms/userAtom';\n\nconst SwipeDeck = forwardRef((props, ref) => {\n  const userId = useRecoilValue(currentUserIdAtom);\n  const swiperRef = useRef(null);\n  const { data, isLoading } = usePeople({ per_page: 30 });\n\n  if (isLoading) return <ActivityIndicator style={{marginTop:40}} />;\n\n  const people = data && data.data ? data.data : [];\n\n  const handleSwipe = async (idx, type) => {\n    const target = people[idx];\n    if (!target) return;\n    try {\n      if (type === 'right') await likePerson({ user_id: userId, target_id: target.id });\n      else await dislikePerson({ user_id: userId, target_id: target.id });\n    } catch (e) {\n      console.warn('Swipe API error', e.message);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    swipeLeft: () => swiperRef.current?.swipeLeft(),\n    swipeRight: () => swiperRef.current?.swipeRight(),\n    jumpToCardIndex: (i) => swiperRef.current?.jumpToCardIndex(i),\n  }));\n\n  return (\n    <View style={styles.container}>\n      <Swiper\n        ref={swiperRef}\n        cards={people}\n        cardIndex={0}\n        renderCard={(card) => <PersonCard person={card} />}\n        stackSize={3}\n        verticalSwipe={false}\n        onSwipedLeft={(i) => handleSwipe(i, 'left')}\n        onSwipedRight={(i) => handleSwipe(i, 'right')}\n        containerStyle={styles.swiper}\n        cardStyle={{ alignItems: 'center' }}\n        overlayLabels={{\n          left: { title: 'NOPE', style: { label: { backgroundColor: 'red', color: 'white', fontSize: 24 } }},\n          right: { title: 'LIKE', style: { label: { backgroundColor: 'green', color: 'white', fontSize: 24 } }}\n        }}\n        animateCardOpacity\n      />\n    </View>\n  );\n});\n\nexport default SwipeDeck;\n\nconst styles = StyleSheet.create({\n  container:{flex:1, alignItems:'center', justifyContent:'center'},\n  swiper:{width:'100%', alignItems:'center'}\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}