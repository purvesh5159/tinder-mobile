{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SwipeDeck from \"../components/organisms/SwipeDeck\";\nimport LikedList from \"./LikedList\";\nimport { useRecoilState } from 'recoil';\nimport { currentUserIdAtom } from \"../atoms/userAtom\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MainScreen() {\n  var _useRecoilState = useRecoilState(currentUserIdAtom),\n    _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n    userId = _useRecoilState2[0],\n    setUserId = _useRecoilState2[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showLiked = _useState2[0],\n    setShowLiked = _useState2[1];\n  var swipeDeckRef = useRef(null);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.top,\n      children: [_jsxs(Text, {\n        children: [\"Swiping as user_id: \", userId]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 8\n        },\n        children: [_jsx(TouchableOpacity, {\n          style: styles.btn,\n          onPress: function onPress() {\n            return setUserId(1);\n          },\n          children: _jsx(Text, {\n            children: \"Use 1\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.btn,\n          onPress: function onPress() {\n            return setUserId(2);\n          },\n          children: _jsx(Text, {\n            children: \"Use 2\"\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: [styles.btn, {\n          marginTop: 10,\n          backgroundColor: '#ffdddd'\n        }],\n        onPress: function onPress() {\n          return setShowLiked(!showLiked);\n        },\n        children: _jsx(Text, {\n          children: showLiked ? \"Back to Swipe Deck\" : \"See Liked People\"\n        })\n      })]\n    }), showLiked ? _jsx(LikedList, {}) : _jsx(SwipeDeck, {\n      ref: swipeDeckRef\n    }), !showLiked && _jsxs(View, {\n      style: styles.bottom,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.actionBtn, {\n          backgroundColor: '#f66'\n        }],\n        onPress: function onPress() {\n          var _swipeDeckRef$current;\n          return (_swipeDeckRef$current = swipeDeckRef.current) == null ? void 0 : _swipeDeckRef$current.swipeLeft();\n        },\n        children: _jsx(Text, {\n          style: styles.actionText,\n          children: \"\\uD83D\\uDC4E Nope\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.actionBtn, {\n          backgroundColor: '#6f6'\n        }],\n        onPress: function onPress() {\n          var _swipeDeckRef$current2;\n          return (_swipeDeckRef$current2 = swipeDeckRef.current) == null ? void 0 : _swipeDeckRef$current2.swipeRight();\n        },\n        children: _jsx(Text, {\n          style: styles.actionText,\n          children: \"\\uD83D\\uDC4D Like\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.actionBtn, {\n          backgroundColor: '#66f'\n        }],\n        onPress: function onPress() {\n          var _swipeDeckRef$current3;\n          return (_swipeDeckRef$current3 = swipeDeckRef.current) == null ? void 0 : _swipeDeckRef$current3.jumpToCardIndex(0);\n        },\n        children: _jsx(Text, {\n          style: styles.actionText,\n          children: \"\\uD83D\\uDD04 Refresh\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  top: {\n    padding: 12,\n    alignItems: 'center'\n  },\n  bottom: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 12\n  },\n  btn: {\n    backgroundColor: '#eee',\n    padding: 8,\n    marginHorizontal: 6,\n    borderRadius: 8\n  },\n  actionBtn: {\n    flex: 1,\n    margin: 4,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  actionText: {\n    color: '#fff',\n    fontWeight: '700'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","StyleSheet","TouchableOpacity","Text","SwipeDeck","LikedList","useRecoilState","currentUserIdAtom","jsxs","_jsxs","jsx","_jsx","MainScreen","_useRecoilState","_useRecoilState2","_slicedToArray","userId","setUserId","_useState","_useState2","showLiked","setShowLiked","swipeDeckRef","style","styles","container","children","top","flexDirection","marginTop","btn","onPress","backgroundColor","ref","bottom","actionBtn","_swipeDeckRef$current","current","swipeLeft","actionText","_swipeDeckRef$current2","swipeRight","_swipeDeckRef$current3","jumpToCardIndex","create","flex","padding","alignItems","justifyContent","marginHorizontal","borderRadius","margin","color","fontWeight"],"sources":["D:/xamp/htdocs/tinder-mobile/src/screens/MainScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native';\nimport SwipeDeck from '../components/organisms/SwipeDeck';\nimport LikedList from './LikedList';\nimport { useRecoilState } from 'recoil';\nimport { currentUserIdAtom } from '../atoms/userAtom';\n\nexport default function MainScreen() {\n  const [userId, setUserId] = useRecoilState(currentUserIdAtom);\n  const [showLiked, setShowLiked] = useState(false);\n  const swipeDeckRef = useRef(null);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.top}>\n        <Text>Swiping as user_id: {userId}</Text>\n        <View style={{flexDirection:'row', marginTop:8}}>\n          <TouchableOpacity style={styles.btn} onPress={() => setUserId(1)}><Text>Use 1</Text></TouchableOpacity>\n          <TouchableOpacity style={styles.btn} onPress={() => setUserId(2)}><Text>Use 2</Text></TouchableOpacity>\n        </View>\n\n        <TouchableOpacity style={[styles.btn, {marginTop:10, backgroundColor:'#ffdddd'}]} onPress={() => setShowLiked(!showLiked)}>\n          <Text>{showLiked ? \"Back to Swipe Deck\" : \"See Liked People\"}</Text>\n        </TouchableOpacity>\n      </View>\n\n      {showLiked ? <LikedList /> : <SwipeDeck ref={swipeDeckRef} />}\n\n      {!showLiked && (\n        <View style={styles.bottom}>\n          <TouchableOpacity style={[styles.actionBtn,{backgroundColor:'#f66'}]} onPress={() => swipeDeckRef.current?.swipeLeft()}>\n            <Text style={styles.actionText}>üëé Nope</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.actionBtn,{backgroundColor:'#6f6'}]} onPress={() => swipeDeckRef.current?.swipeRight()}>\n            <Text style={styles.actionText}>üëç Like</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.actionBtn,{backgroundColor:'#66f'}]} onPress={() => swipeDeckRef.current?.jumpToCardIndex(0)}>\n            <Text style={styles.actionText}>üîÑ Refresh</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex:1 },\n  top: { padding:12, alignItems:'center' },\n  bottom: { flexDirection:'row', justifyContent:'space-around', padding:12 },\n  btn: { backgroundColor:'#eee', padding:8, marginHorizontal:6, borderRadius:8 },\n  actionBtn: { flex:1, margin:4, padding:12, borderRadius:8, alignItems:'center' },\n  actionText: { color:'#fff', fontWeight:'700' }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}