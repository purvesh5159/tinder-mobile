{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useQuery } from '@tanstack/react-query';\nimport client from \"../api/client\";\nvar fetchLikedPeople = function () {\n  var _ref2 = _asyncToGenerator(function* (_ref) {\n    var queryKey = _ref.queryKey;\n    var _queryKey = _slicedToArray(queryKey, 2),\n      userId = _queryKey[1];\n    var res = yield client.get('/people/liked', {\n      params: {\n        user_id: userId\n      }\n    });\n    return res.data.data || res.data;\n  });\n  return function fetchLikedPeople(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport function useLikedPeople(userId) {\n  return useQuery(['likedPeople', userId], fetchLikedPeople);\n}","map":{"version":3,"names":["useQuery","client","fetchLikedPeople","_ref2","_asyncToGenerator","_ref","queryKey","_queryKey","_slicedToArray","userId","res","get","params","user_id","data","_x","apply","arguments","useLikedPeople"],"sources":["D:/xamp/htdocs/tinder-mobile/src/hooks/useLikedPeople.js"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport client from '../api/client';\n\nconst fetchLikedPeople = async ({ queryKey }) => {\n  const [, userId] = queryKey;\n  const res = await client.get('/people/liked', { params: { user_id: userId } });\n  return res.data.data || res.data;\n};\n\nexport function useLikedPeople(userId) {\n  return useQuery(['likedPeople', userId], fetchLikedPeople);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM;AAEb,IAAMC,gBAAgB;EAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAAC,IAAA,EAAwB;IAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACxC,IAAAC,SAAA,GAAAC,cAAA,CAAmBF,QAAQ;MAAlBG,MAAM,GAAAF,SAAA;IACf,IAAMG,GAAG,SAAST,MAAM,CAACU,GAAG,CAAC,eAAe,EAAE;MAAEC,MAAM,EAAE;QAAEC,OAAO,EAAEJ;MAAO;IAAE,CAAC,CAAC;IAC9E,OAAOC,GAAG,CAACI,IAAI,CAACA,IAAI,IAAIJ,GAAG,CAACI,IAAI;EAClC,CAAC;EAAA,gBAJKZ,gBAAgBA,CAAAa,EAAA;IAAA,OAAAZ,KAAA,CAAAa,KAAA,OAAAC,SAAA;EAAA;AAAA,GAIrB;AAED,OAAO,SAASC,cAAcA,CAACT,MAAM,EAAE;EACrC,OAAOT,QAAQ,CAAC,CAAC,aAAa,EAAES,MAAM,CAAC,EAAEP,gBAAgB,CAAC;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}