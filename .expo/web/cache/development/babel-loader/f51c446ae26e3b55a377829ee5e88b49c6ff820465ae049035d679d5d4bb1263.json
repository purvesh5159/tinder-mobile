{"ast":null,"code":"import React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport Swiper from 'react-native-deck-swiper';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { usePeople } from \"../../hooks/usePeople\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SwipeDeck = forwardRef(function (props, ref) {\n  var swiperRef = useRef(null);\n  var _usePeople = usePeople({\n      per_page: 30\n    }),\n    data = _usePeople.data,\n    isLoading = _usePeople.isLoading;\n  useImperativeHandle(ref, function () {\n    return {\n      swipeLeft: function swipeLeft() {\n        var _swiperRef$current;\n        return (_swiperRef$current = swiperRef.current) == null ? void 0 : _swiperRef$current.swipeLeft();\n      },\n      swipeRight: function swipeRight() {\n        var _swiperRef$current2;\n        return (_swiperRef$current2 = swiperRef.current) == null ? void 0 : _swiperRef$current2.swipeRight();\n      },\n      jumpToCardIndex: function jumpToCardIndex(i) {\n        var _swiperRef$current3;\n        return (_swiperRef$current3 = swiperRef.current) == null ? void 0 : _swiperRef$current3.jumpToCardIndex(i);\n      }\n    };\n  }, []);\n  if (isLoading) {\n    return _jsx(ActivityIndicator, {\n      style: {\n        marginTop: 40\n      }\n    });\n  }\n  var people = data && data.data ? data.data : [];\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(Swiper, {\n      ref: swiperRef,\n      cards: people,\n      renderCard: function renderCard(person) {\n        return props.renderCard(person);\n      },\n      onSwipedLeft: props.onSwipedLeft,\n      onSwipedRight: props.onSwipedRight,\n      backgroundColor: \"transparent\",\n      stackSize: 3,\n      cardIndex: 0\n    })\n  });\n});\nexport default SwipeDeck;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  swiper: {\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","Swiper","ActivityIndicator","View","usePeople","jsx","_jsx","SwipeDeck","props","ref","swiperRef","_usePeople","per_page","data","isLoading","swipeLeft","_swiperRef$current","current","swipeRight","_swiperRef$current2","jumpToCardIndex","i","_swiperRef$current3","style","marginTop","people","flex","children","cards","renderCard","person","onSwipedLeft","onSwipedRight","backgroundColor","stackSize","cardIndex","styles","StyleSheet","create","container","alignItems","justifyContent","swiper","width"],"sources":["D:/xamp/htdocs/tinder-mobile/src/components/organisms/SwipeDeck.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport Swiper from 'react-native-deck-swiper';\nimport { ActivityIndicator, View } from 'react-native';\nimport { usePeople } from '../../hooks/usePeople';\n\nconst SwipeDeck = forwardRef((props, ref) => {\n  const swiperRef = useRef(null);\n  const { data, isLoading } = usePeople({ per_page: 30 });\n\n  // âœ… Always call hooks before any conditional return\n  useImperativeHandle(ref, () => ({\n    swipeLeft: () => swiperRef.current?.swipeLeft(),\n    swipeRight: () => swiperRef.current?.swipeRight(),\n    jumpToCardIndex: (i) => swiperRef.current?.jumpToCardIndex(i),\n  }), []);\n\n  if (isLoading) {\n    return <ActivityIndicator style={{ marginTop: 40 }} />;\n  }\n\n  const people = data && data.data ? data.data : [];\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Swiper\n        ref={swiperRef}\n        cards={people}\n        renderCard={(person) => props.renderCard(person)}\n        onSwipedLeft={props.onSwipedLeft}\n        onSwipedRight={props.onSwipedRight}\n        backgroundColor=\"transparent\"\n        stackSize={3}\n        cardIndex={0}\n      />\n    </View>\n  );\n});\n\nexport default SwipeDeck;\n\n\nconst styles = StyleSheet.create({\n  container:{flex:1, alignItems:'center', justifyContent:'center'},\n  swiper:{width:'100%', alignItems:'center'}\n});\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AACtE,OAAOC,MAAM,MAAM,0BAA0B;AAAC,OAAAC,iBAAA;AAAA,OAAAC,IAAA;AAE9C,SAASC,SAAS;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAElD,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAACU,KAAK,EAAEC,GAAG,EAAK;EAC3C,IAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAAW,UAAA,GAA4BP,SAAS,CAAC;MAAEQ,QAAQ,EAAE;IAAG,CAAC,CAAC;IAA/CC,IAAI,GAAAF,UAAA,CAAJE,IAAI;IAAEC,SAAS,GAAAH,UAAA,CAATG,SAAS;EAGvBf,mBAAmB,CAACU,GAAG,EAAE;IAAA,OAAO;MAC9BM,SAAS,EAAE,SAAXA,SAASA,CAAA;QAAA,IAAAC,kBAAA;QAAA,QAAAA,kBAAA,GAAQN,SAAS,CAACO,OAAO,qBAAjBD,kBAAA,CAAmBD,SAAS,CAAC,CAAC;MAAA;MAC/CG,UAAU,EAAE,SAAZA,UAAUA,CAAA;QAAA,IAAAC,mBAAA;QAAA,QAAAA,mBAAA,GAAQT,SAAS,CAACO,OAAO,qBAAjBE,mBAAA,CAAmBD,UAAU,CAAC,CAAC;MAAA;MACjDE,eAAe,EAAE,SAAjBA,eAAeA,CAAGC,CAAC;QAAA,IAAAC,mBAAA;QAAA,QAAAA,mBAAA,GAAKZ,SAAS,CAACO,OAAO,qBAAjBK,mBAAA,CAAmBF,eAAe,CAACC,CAAC,CAAC;MAAA;IAC/D,CAAC;EAAA,CAAC,EAAE,EAAE,CAAC;EAEP,IAAIP,SAAS,EAAE;IACb,OAAOR,IAAA,CAACJ,iBAAiB;MAACqB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAG;IAAE,CAAE,CAAC;EACxD;EAEA,IAAMC,MAAM,GAAGZ,IAAI,IAAIA,IAAI,CAACA,IAAI,GAAGA,IAAI,CAACA,IAAI,GAAG,EAAE;EAEjD,OACEP,IAAA,CAACH,IAAI;IAACoB,KAAK,EAAE;MAAEG,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACvBrB,IAAA,CAACL,MAAM;MACLQ,GAAG,EAAEC,SAAU;MACfkB,KAAK,EAAEH,MAAO;MACdI,UAAU,EAAE,SAAZA,UAAUA,CAAGC,MAAM;QAAA,OAAKtB,KAAK,CAACqB,UAAU,CAACC,MAAM,CAAC;MAAA,CAAC;MACjDC,YAAY,EAAEvB,KAAK,CAACuB,YAAa;MACjCC,aAAa,EAAExB,KAAK,CAACwB,aAAc;MACnCC,eAAe,EAAC,aAAa;MAC7BC,SAAS,EAAE,CAAE;MACbC,SAAS,EAAE;IAAE,CACd;EAAC,CACE,CAAC;AAEX,CAAC,CAAC;AAEF,eAAe5B,SAAS;AAGxB,IAAM6B,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAC;IAACb,IAAI,EAAC,CAAC;IAAEc,UAAU,EAAC,QAAQ;IAAEC,cAAc,EAAC;EAAQ,CAAC;EAChEC,MAAM,EAAC;IAACC,KAAK,EAAC,MAAM;IAAEH,UAAU,EAAC;EAAQ;AAC3C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}