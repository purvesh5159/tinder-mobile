{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PersonCard = function PersonCard(_ref) {\n  var _person$first_name, _person$last_name;\n  var person = _ref.person;\n  if (!person) return null;\n  var name = person.name || ((_person$first_name = person.first_name) != null ? _person$first_name : '') + \" \" + ((_person$last_name = person.last_name) != null ? _person$last_name : '');\n  var age = person.age || '';\n  var location = person.location || person.city || '';\n  var photo = person.photo_url || person.image || person.avatar || person.profile_pic;\n  return _jsxs(View, {\n    style: styles.card,\n    children: [photo ? _jsx(Image, {\n      source: {\n        uri: photo\n      },\n      style: styles.image\n    }) : _jsx(View, {\n      style: [styles.image, styles.noPhoto],\n      children: _jsx(Text, {\n        children: \"No photo\"\n      })\n    }), _jsxs(View, {\n      style: styles.infoBox,\n      children: [_jsxs(Text, {\n        style: styles.name,\n        children: [name, age ? \", \" + age : '']\n      }), _jsx(Text, {\n        style: styles.location,\n        children: location\n      })]\n    })]\n  });\n};\nexport default PersonCard;\nvar styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    borderRadius: 12,\n    overflow: 'hidden',\n    backgroundColor: '#fff'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  noPhoto: {\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  infoBox: {\n    position: 'absolute',\n    bottom: 15,\n    left: 15\n  },\n  name: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  location: {\n    fontSize: 16,\n    color: '#eee'\n  }\n});","map":{"version":3,"names":["React","View","Text","Image","StyleSheet","jsx","_jsx","jsxs","_jsxs","PersonCard","_ref","_person$first_name","_person$last_name","person","name","first_name","last_name","age","location","city","photo","photo_url","image","avatar","profile_pic","style","styles","card","children","source","uri","noPhoto","infoBox","create","flex","borderRadius","overflow","backgroundColor","width","height","resizeMode","justifyContent","alignItems","position","bottom","left","fontSize","fontWeight","color"],"sources":["D:/xamp/htdocs/tinder-mobile/src/components/molecules/PersonCard.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Image, StyleSheet } from 'react-native';\n\nconst PersonCard = ({ person }) => {\n  if (!person) return null;\n\n  // Map your API fields\n  const name = person.name || `${person.first_name ?? ''} ${person.last_name ?? ''}`;\n  const age = person.age || '';\n  const location = person.location || person.city || '';\n\n  const photo =\n    person.photo_url ||\n    person.image ||\n    person.avatar ||\n    person.profile_pic;\n\n  return (\n    <View style={styles.card}>\n      {/* Profile Image */}\n      {photo ? (\n        <Image source={{ uri: photo }} style={styles.image} />\n      ) : (\n        <View style={[styles.image, styles.noPhoto]}>\n          <Text>No photo</Text>\n        </View>\n      )}\n\n      {/* Overlay Info at bottom of card */}\n      <View style={styles.infoBox}>\n        <Text style={styles.name}>\n          {name}{age ? `, ${age}` : ''}\n        </Text>\n        <Text style={styles.location}>{location}</Text>\n      </View>\n    </View>\n  );\n};\n\nexport default PersonCard;\n\nconst styles = StyleSheet.create({\n  card: {\n    flex: 1,\n    borderRadius: 12,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    resizeMode: 'cover',\n  },\n  noPhoto: {\n    backgroundColor: '#eee',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  infoBox: {\n    position: 'absolute',\n    bottom: 15,\n    left: 15,\n  },\n  name: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  location: {\n    fontSize: 16,\n    color: '#eee',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAmB;EAAA,IAAAC,kBAAA,EAAAC,iBAAA;EAAA,IAAbC,MAAM,GAAAH,IAAA,CAANG,MAAM;EAC1B,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAGxB,IAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI,MAAAH,kBAAA,GAAOE,MAAM,CAACE,UAAU,YAAAJ,kBAAA,GAAI,EAAE,YAAAC,iBAAA,GAAIC,MAAM,CAACG,SAAS,YAAAJ,iBAAA,GAAI,EAAE,CAAE;EAClF,IAAMK,GAAG,GAAGJ,MAAM,CAACI,GAAG,IAAI,EAAE;EAC5B,IAAMC,QAAQ,GAAGL,MAAM,CAACK,QAAQ,IAAIL,MAAM,CAACM,IAAI,IAAI,EAAE;EAErD,IAAMC,KAAK,GACTP,MAAM,CAACQ,SAAS,IAChBR,MAAM,CAACS,KAAK,IACZT,MAAM,CAACU,MAAM,IACbV,MAAM,CAACW,WAAW;EAEpB,OACEhB,KAAA,CAACP,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GAEtBR,KAAK,GACJd,IAAA,CAACH,KAAK;MAAC0B,MAAM,EAAE;QAAEC,GAAG,EAAEV;MAAM,CAAE;MAACK,KAAK,EAAEC,MAAM,CAACJ;IAAM,CAAE,CAAC,GAEtDhB,IAAA,CAACL,IAAI;MAACwB,KAAK,EAAE,CAACC,MAAM,CAACJ,KAAK,EAAEI,MAAM,CAACK,OAAO,CAAE;MAAAH,QAAA,EAC1CtB,IAAA,CAACJ,IAAI;QAAA0B,QAAA,EAAC;MAAQ,CAAM;IAAC,CACjB,CACP,EAGDpB,KAAA,CAACP,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACM,OAAQ;MAAAJ,QAAA,GAC1BpB,KAAA,CAACN,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACZ,IAAK;QAAAc,QAAA,GACtBd,IAAI,EAAEG,GAAG,UAAQA,GAAG,GAAK,EAAE;MAAA,CACxB,CAAC,EACPX,IAAA,CAACJ,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACR,QAAS;QAAAU,QAAA,EAAEV;MAAQ,CAAO,CAAC;IAAA,CAC3C,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAeT,UAAU;AAEzB,IAAMiB,MAAM,GAAGtB,UAAU,CAAC6B,MAAM,CAAC;EAC/BN,IAAI,EAAE;IACJO,IAAI,EAAE,CAAC;IACPC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,eAAe,EAAE;EACnB,CAAC;EACDf,KAAK,EAAE;IACLgB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,UAAU,EAAE;EACd,CAAC;EACDT,OAAO,EAAE;IACPM,eAAe,EAAE,MAAM;IACvBI,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDV,OAAO,EAAE;IACPW,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACR,CAAC;EACD/B,IAAI,EAAE;IACJgC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACD9B,QAAQ,EAAE;IACR4B,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE;EACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}