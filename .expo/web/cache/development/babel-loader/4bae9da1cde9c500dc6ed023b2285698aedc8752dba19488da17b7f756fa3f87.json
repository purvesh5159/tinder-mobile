{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Avatar from \"../atoms/Avatar\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PersonCard(_ref) {\n  var _person$photos, _person$photos$;\n  var person = _ref.person;\n  var photo = ((_person$photos = person.photos) == null ? void 0 : (_person$photos$ = _person$photos[0]) == null ? void 0 : _person$photos$.url) || null;\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(View, {\n      style: styles.imageContainer,\n      children: photo ? _jsx(Avatar, {\n        uri: photo,\n        size: 200\n      }) : _jsx(View, {\n        style: styles.placeholder,\n        children: _jsx(Text, {\n          children: \"No photo\"\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.footer,\n      children: [_jsxs(Text, {\n        style: styles.name,\n        children: [person.name, \", \", _jsx(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: person.age\n        })]\n      }), _jsx(Text, {\n        style: styles.location,\n        children: person.latitude ? person.latitude.toFixed(2) + \", \" + person.longitude.toFixed(2) : ''\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  card: {\n    width: 250,\n    alignSelf: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    overflow: 'hidden',\n    elevation: 4,\n    marginBottom: 0\n  },\n  imageContainer: {\n    paddingTop: 10\n  },\n  placeholder: {\n    width: 250,\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd'\n  },\n  footer: {\n    padding: 7,\n    width: '100%'\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: '700'\n  },\n  location: {\n    color: '#666',\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Avatar","jsx","_jsx","jsxs","_jsxs","PersonCard","_ref","_person$photos","_person$photos$","person","photo","photos","url","style","styles","card","children","imageContainer","uri","size","placeholder","footer","name","fontWeight","age","location","latitude","toFixed","longitude","create","width","alignSelf","alignItems","backgroundColor","borderRadius","overflow","elevation","marginBottom","paddingTop","height","justifyContent","padding","fontSize","color","marginTop"],"sources":["D:/xamp/htdocs/tinder-mobile/src/components/molecules/PersonCard.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport Avatar from '../atoms/Avatar';\n\nexport default function PersonCard({ person }) {\n  const photo = person.photos?.[0]?.url || null;\n\n  return (\n    <View style={styles.card}>\n      <View style={styles.imageContainer}>\n        {photo ? (\n          <Avatar uri={photo} size={200} />\n        ) : (\n          <View style={styles.placeholder}>\n            <Text>No photo</Text>\n          </View>\n        )}\n      </View>\n\n      <View style={styles.footer}>\n        <Text style={styles.name}>\n          {person.name}, <Text style={{ fontWeight: '600' }}>{person.age}</Text>\n        </Text>\n        <Text style={styles.location}>\n          {person.latitude ? `${person.latitude.toFixed(2)}, ${person.longitude.toFixed(2)}` : ''}\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    width: 250,\n    alignSelf: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    overflow: 'hidden',\n    elevation: 4,\n    marginBottom: 0,\n  },\n  imageContainer: {\n    paddingTop: 10, // adds space between card top and image\n  },\n  placeholder: {\n    width: 250,\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ddd',\n  },\n  footer: {\n    padding: 7,\n    width: '100%',\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: '700',\n  },\n  location: {\n    color: '#666',\n    marginTop: 4,\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErC,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAa;EAAA,IAAAC,cAAA,EAAAC,eAAA;EAAA,IAAVC,MAAM,GAAAH,IAAA,CAANG,MAAM;EACzC,IAAMC,KAAK,GAAG,EAAAH,cAAA,GAAAE,MAAM,CAACE,MAAM,sBAAAH,eAAA,GAAbD,cAAA,CAAgB,CAAC,CAAC,qBAAlBC,eAAA,CAAoBI,GAAG,KAAI,IAAI;EAE7C,OACER,KAAA,CAACP,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GACvBd,IAAA,CAACL,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACG,cAAe;MAAAD,QAAA,EAChCN,KAAK,GACJR,IAAA,CAACF,MAAM;QAACkB,GAAG,EAAER,KAAM;QAACS,IAAI,EAAE;MAAI,CAAE,CAAC,GAEjCjB,IAAA,CAACL,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACM,WAAY;QAAAJ,QAAA,EAC9Bd,IAAA,CAACJ,IAAI;UAAAkB,QAAA,EAAC;QAAQ,CAAM;MAAC,CACjB;IACP,CACG,CAAC,EAEPZ,KAAA,CAACP,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACO,MAAO;MAAAL,QAAA,GACzBZ,KAAA,CAACN,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACQ,IAAK;QAAAN,QAAA,GACtBP,MAAM,CAACa,IAAI,EAAC,IAAE,EAAApB,IAAA,CAACJ,IAAI;UAACe,KAAK,EAAE;YAAEU,UAAU,EAAE;UAAM,CAAE;UAAAP,QAAA,EAAEP,MAAM,CAACe;QAAG,CAAO,CAAC;MAAA,CAClE,CAAC,EACPtB,IAAA,CAACJ,IAAI;QAACe,KAAK,EAAEC,MAAM,CAACW,QAAS;QAAAT,QAAA,EAC1BP,MAAM,CAACiB,QAAQ,GAAMjB,MAAM,CAACiB,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,UAAKlB,MAAM,CAACmB,SAAS,CAACD,OAAO,CAAC,CAAC,CAAC,GAAK;MAAE,CACnF,CAAC;IAAA,CACH,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,IAAMb,MAAM,GAAGf,UAAU,CAAC8B,MAAM,CAAC;EAC/Bd,IAAI,EAAE;IACJe,KAAK,EAAE,GAAG;IACVC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE,CAAC;IACZC,YAAY,EAAE;EAChB,CAAC;EACDpB,cAAc,EAAE;IACdqB,UAAU,EAAE;EACd,CAAC;EACDlB,WAAW,EAAE;IACXU,KAAK,EAAE,GAAG;IACVS,MAAM,EAAE,GAAG;IACXP,UAAU,EAAE,QAAQ;IACpBQ,cAAc,EAAE,QAAQ;IACxBP,eAAe,EAAE;EACnB,CAAC;EACDZ,MAAM,EAAE;IACNoB,OAAO,EAAE,CAAC;IACVX,KAAK,EAAE;EACT,CAAC;EACDR,IAAI,EAAE;IACJoB,QAAQ,EAAE,EAAE;IACZnB,UAAU,EAAE;EACd,CAAC;EACDE,QAAQ,EAAE;IACRkB,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}